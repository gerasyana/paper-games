{"version":3,"sources":["UI/Button/Button.js","hoc/Aux/Aux.js","storage/reducers/auth.js","storage/reducers/statistics.js","constants/games.js","storage/reducers/game.js","constants/configs.js","socket.io/client.js","constants/localStorageKeys.js","axios/axios.js","axios/routes/user.js","storage/sagas/auth.js","storage/sagas/game.js","axios/routes/game.js","storage/sagas/statistics.js","storage/sagas/sagas.js","storage/store.js","components/NavigationBar/NavigationItems/NavigationItem/NavigationItem.js","components/NavigationBar/NavigationItems/NavigationItems.js","components/NavigationBar/NavigationBar.js","hoc/Layout/Layout.js","components/Games/GameRating/GameRating.js","UI/Modal/Modal.js","containers/Game/NewRoom/NewRoom.js","components/TickTackToe/BoardMove/BoardMove.js","constants/modalsIds.js","components/Games/Notifications/WaitForPlayerModal.js","components/Games/Notifications/PlayerLeftRoomModal.js","components/Games/Notifications/GameIsOverModal.js","containers/Game/TickTackToe/TickTackToe.js","components/Battleship/FleetGrid/FleetGrid.js","containers/Game/Battleship/Fleet/Fleet.js","containers/Game/Battleship/Fleet/ShipsPlacement/ShipsPlacement.js","containers/Game/Battleship/Battleship.js","containers/Game/Game.js","components/Room/Room.js","containers/Rooms/Rooms.js","components/Games/GameLogo/GameLogo.js","components/Games/Games.js","containers/Home/Home.js","App.js","index.js","components/Battleship/FleetGrid/FleetGrid.css","storage/actions/actionTypes.js","containers/Game/Battleship/Fleet/ShipsPlacement/ShipsPlacement.css","containers/Game/TickTackToe/TickTackToe.css","storage/actions/auth.js","storage/actions/statistics.js","storage/actions/game.js","storage/actions/actions.js","UI/Spinner/Spinner.js","containers/Game/Battleship/Battleship.css","hoc/Layout/Layout.css","components/Games/GameLogo/GameLogo.css","UI/Input/Input.js","helpers/validation.js","UI/Spinner/Spinner.css","assets/tick-tack-toe.jpg","assets/battleship.png","UI/Modal/Modal.css","components/TickTackToe/BoardMove/BoardMove.css"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","memo","props","a","createElement","children","Aux","initialState","redirectUrl","user","isAuthenticated","loading","token","error","reducer","state","arguments","length","undefined","action","type","actionTypes","Object","objectSpread","totalPoints","rooms","usersOnline","gamesRating","reducers","data","defineProperty","gameId","rating","games","_games","name","label","componentName","src","tickTackToeImgSrc","url","rules","battleshipImgSrc","gameBoards","_gameBoards","gameIsOver","youWon","yourTurn","playerStep","moves","Array","fill","fleets","gameStarted","roomClosed","playerLeftRoom","room","players","gameBoard","_action$data","keys","_action$data2","SERVER_URL","window","location","origin","client","this","emit","userId","io","connect","on","store","dispatch","actions","disconnect","TOKEN_KEY","EXPIRATION_DATE_KEY","instance","axios","create","baseURL","concat","headers","common","Access-Control-Allow-Origin","Access-Control-Allow-Methods","post","Content-Type","interceptors","request","use","req","localStorage","getItem","getUser","get","login","signUp","logout","resetPassword","checkAuthentication","setAuthTimeout","regenerator_default","wrap","_context","prev","next","userRouters","removeLocalStorage","put","disconnectUser","stop","_marked","expirationDate","response","expiresIn","_context2","sent","Date","status","getTime","connectUser","id","_marked2","_context3","credentials","setLocalStorage","tokenDetails","_marked3","_context4","_marked4","_context5","_marked5","_context6","delay","expirationTime","_marked6","setItem","removeItem","joinRoom","createRoom","leaveRoom","playerMadeMove","updateGameBoard","game_marked","game_marked2","game_marked3","game_marked4","game_marked5","getGameRating","params","gameRouters","statistics_marked","watchAuth","watchGame","watchStatistics","all","takeEvery","authSagas","sagas_marked","gameSagas","sagas_marked2","statistics","sagas_marked3","sagaMiddleware","createSagaMiddleware","createStore","combineReducers","auth","authReducer","statisticsReducer","game","gameReducer","applyMiddleware","run","getState","navItem","react_default","className","onClick","react_router_dom","to","link","exact","getLink","dropdownItems","map","item","dropDownItem","key","href","data-toggle","aria-labelledby","getDrowdown","getText","gamesDropdownItems","navItemsRight","Aux_Aux","NavigationItem","navItemsLeft","usersItems","username","data-target","aria-controls","aria-expanded","aria-label","NavigationItems","Layout","setInterceptor","res","_this","Promise","resolve","eject","nextProps","classes","appContainer","header","NavigationBar","body","Component","withRouter","ratingItem","points","style","maxHeight","overflow","scope","closeIcon","data-dismiss","aria-hidden","showCloseIcon","modalCentered","tabIndex","role","data-backdrop","data-keyboard","title","modalId","NewRoom","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setControlValue","event","value","target","validationResults","validateInput","validation","controlUpdated","roomControl","setState","isRoomExists","errorMessage","isValid","playerId","player","$","modal","roomName","includes","placeholder","required","nextState","Modal_Modal","Input","assign","onChange","Button","disabled","boardMove","waitForPlayerModalId","playerLeftRoomModalId","gameIsOverModalId","Spinner","startWaitingForPlayer","message","gameDetailsUrl","TickTackToe","modals","closeRoom","history","push","setTimeout","waitForPlayer","toConsumableArray","getGameIsOverModal","restartGame","GameIsOverModal","getGameBoard","boardRows","_loop","i","boardMoves","slice","index","BoardMove_BoardMove","gamePnl","border","height","noUserTurn","playersPnl","addEventListener","e","cancelBubble","returnValue","stopPropagation","preventDefault","setLoginRedirectUrl","PlayerLeftRoomModal","react_router","WaitForPlayerModal","horizontalColumns","rows","column","x","cells","gridColumns","shipClasses","readOnlyMode","shipDestroyed","moved","selected","outOfBoundary","hovered","join","inTarget","onMouseOver","Fleet","madeMove","findIndex","fleet","displayShips","hasOwnProperty","shipColumns","ships","reduce","columns","ship","apply","columnsToDestroy","destroyed","targetColumns","FleetGrid_FleetGrid","carrier","size","count","battleship","cruiser","destroyer","submarine","ShipsPlacement","selectShip","selectedShip","forEach","placeShip","shipOutOfBoundary","placedShips","selectedShipColumns","shipsAreSet","gridColumnHovered","indexOf","currentRow","Math","floor","horizontalShip","filter","filled","gridColumn","setOrientation","playerShips","shipId","_ships$shipId","_this2","values","shipCells","shipsPanel","width","shipSelected","Battleship","content","Fleet_ShipsPlacement_ShipsPlacement","every","Battleship_Fleet_Fleet","find","Game","match","startGame","gameRating","pathname","gameDetails","rule","Game_NewRoom_NewRoom","GameRating","path","component","prevState","joinEnabled","Rooms","roomSelected","gameStart","Room","imgContainer","alt","gameLabel","GameLogo_GameLogo","gameSelected","Home","openGameDetails","Games","PureComponent","Login","React","lazy","then","bind","Logout","SignUp","ResetPassword","App","hoc_Layout_Layout","react","fallback","render","app","es","src_App","ReactDOM","document","getElementById","module","exports","fleetGrid","row","gridCellHeaderEmpty","gridCellHeader","gridRowNumber","cell","empty","readOnly","d","__webpack_exports__","CHECK_AUTHENTICATION","AUTH_SET_TIMEOUT","INIT_LOGIN","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILED","INIT_LOGOUT","LOGOUT_SUCCESS","INIT_SIGNUP","SIGNUP_START","SIGNUP_SUCCESS","SIGNUP_FAILED","INIT_RESET_PASSWORD","RESET_PASSWORD_START","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_FAILED","SET_AUTH_REDIRECT_URL","SET_USER_TOTAL_POINTS","SET_SITE_STATISTICS","UPDATE_ROOMS","JOIN_ROOM","CREATE_ROOM","PLAYER1_JOINED","PLAYER2_JOINED","LEAVE_ROOM","CLOSE_ROOM","WAIT_FOR_PLAYER","PLAYER_LEFT_ROOM","PLAYER_MADE_MOVE","TOGGLE_PLAYER_TURN","GAME_IS_OVER","RESTART_GAME","UPDATE_GAME_BOARD","GAME_BOARD_UPDATED","CLEAN_GAME_BOARD","SET_GAME_RATING","GET_GAME_RATING","shipCell","orientation","orientationSelected","loginStart","loginSuccess","loginFailed","resetPasswordStart","resetPasswordSuccess","resetPasswordFailed","logoutSuccess","signUpStart","signUpSuccess","signUpFailed","setUserTotalPoints","updateRooms","setSiteStatistics","setGameRating","player2Joined","player1Joined","togglePlayerTurn","gameBoardUpdated","cleanGameBoard","auth_checkAuthentication","auth_setAuthTimeout","auth_login","auth_loginStart","auth_loginSuccess","auth_loginFailed","auth_signUp","auth_signUpStart","auth_signUpSuccess","auth_signUpFailed","auth_resetPassword","auth_resetPasswordStart","auth_resetPasswordSuccess","auth_resetPasswordFailed","auth_logout","auth_logoutSuccess","auth_setLoginRedirectUrl","auth_setUserTotalPoints","statistics_updateRooms","statistics_setSiteStatistics","statistics_getGameRating","statistics_setGameRating","game_createRoom","game_joinRoom","game_player1Joined","game_player2Joined","game_closeRoom","game_leaveRoom","game_playerLeftRoom","game_togglePlayerTurn","game_playerMadeMove","game_gameIsOver","game_waitForPlayer","game_restartGame","game_updateGameBoard","game_gameBoardUpdated","game_cleanGameBoard","_Spinner_css__WEBPACK_IMPORTED_MODULE_1__","_Spinner_css__WEBPACK_IMPORTED_MODULE_1___default","spinner","input","htmlFor","defaultValue","autoComplete","onInput","inputClasses","EMAIL_PATTERN","trim","minLength","maxLength","isEmail","test","load4","p"],"mappings":"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","file":"static/js/main.ad8580a8.chunk.js","sourcesContent":["import React, { memo } from 'react';\n\nconst button = (props) => {\n    return (\n        <button {...props}>\n        {props.children}\n    </button>\n    )\n}\n\n\nexport default memo(button);\n\n\n","const Aux = (props) => (props.children);\n\nexport default Aux;","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    redirectUrl: '/',\n    user: null,\n    isAuthenticated: false,\n    loading: false,\n    token: null,\n    error: null\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.LOGIN_START:\n        case actionTypes.SIGNUP_START:\n        case actionTypes.RESET_PASSWORD_START: {\n            return {\n                ...state,\n                loading: true,\n                isAuthenticated: false,\n                error: null\n            };\n        }\n        case actionTypes.LOGIN_SUCCESS:\n        case actionTypes.SIGNUP_SUCCESS:\n        case actionTypes.RESET_PASSWORD_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                isAuthenticated: true,\n                user: action.user\n            };\n        }\n        case actionTypes.LOGIN_FAILED:\n        case actionTypes.SIGNUP_FAILED:\n        case actionTypes.RESET_PASSWORD_FAILED: {\n            return {\n                ...state,\n                loading: false,\n                isAuthenticated: false,\n                error: action.error\n            };\n        }\n        case actionTypes.LOGOUT_SUCCESS: {\n            return {\n                ...state,\n                isAuthenticated: false,\n                user: null\n            };\n        }\n        case actionTypes.SET_AUTH_REDIRECT_URL: {\n            return {\n                ...state,\n                redirectUrl: action.redirectUrl\n            };\n        }\n        case actionTypes.SET_USER_TOTAL_POINTS: {\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    totalPoints: action.totalPoints\n                }\n            }\n        }\n        default:\n            return state;\n    }\n}\n\nexport default reducer;\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    rooms: [],\n    usersOnline: 0,\n    gamesRating: {}\n}\n\nconst reducers = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SET_SITE_STATISTICS: {\n            return {\n                ...state,\n                ...action.data\n            }\n        }\n        case actionTypes.UPDATE_ROOMS: {\n            return {\n                ...state,\n                rooms: action.rooms\n            }\n        }\n        case actionTypes.SET_GAME_RATING: {\n            return {\n                ...state,\n                gamesRating: {\n                    ...state.gamesRating,\n                    [action.gameId]: action.rating\n                }\n            }\n        }\n        default:\n            return state;\n    }\n}\n\nexport default reducers;","import tickTackToeImgSrc from '../assets/tick-tack-toe.jpg';\nimport battleshipImgSrc from '../assets/battleship.png';\n\nexport const tickTackToeKey = 'tick-tack-toe';\nexport const battleship = 'battleship';\n\nconst games = {\n    [tickTackToeKey]: {\n        name: 'Tic-Tac-Toe',\n        label: 'Tick Tac Toe',\n        componentName: 'TickTackToe',\n        src: tickTackToeImgSrc,\n        url: '/game/tick-tack-toe',\n        rules: [\n            'Player 1 creates a new room by entering room name',\n            'Player 2 joins an existing room',\n            'The game is played on a grid that\\'s 3 squares by 3 squares',\n            'Player 1 is X, player 2 is Y. Player 1 goes first',\n            'For each won game you got 10 points'\n        ]\n    },\n    [battleship]: {\n        name: 'Battleship',\n        label: 'Battleship',\n        componentName: 'Battleship',\n        src: battleshipImgSrc,\n        url: '/game/battleship',\n        rules: [\n            'Player 1 creates a new room by entering room name',\n            'Player 2 joins an existing room',\n            'Player 1 goes first',\n            'Select ships from the left-hand side and place on your board',\n            'Wait while your enemy places his ships and start the game',\n            'Click on the cells of the enemy\\'s board to find and destroy all enemy ships',\n            'For each won game you got 50 points'\n        ]\n    }\n}\n\nexport const gameBoards = {\n    [tickTackToeKey]: {\n        gameIsOver: false,\n        youWon: false,\n        yourTurn: false,\n        playerStep: '0',\n        moves: new Array(9).fill(null)\n    },\n    [battleship]: {\n        gameIsOver: false,\n        youWon: false,\n        yourTurn: false,\n        fleets: []\n    }\n}\n\nexport default games;\n","import * as actionTypes from '../actions/actionTypes';\nimport { gameBoards } from '../../constants/games';\n\nconst initialState = {\n    gameStarted: false,\n    roomClosed: false,\n    playerLeftRoom: false,\n    room: {\n        gameId: null,\n        name: null,\n        players: []\n    },\n    gameBoard: {}\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.PLAYER1_JOINED: {\n            const { room, gameBoard } = action.data;\n            return {\n                ...state,\n                playerLeftRoom: false,\n                roomClosed: false,\n                gameStarted: Object.keys(room.players).length === 2,\n                gameBoard,\n                room\n            }\n        }\n        case actionTypes.PLAYER2_JOINED: {\n            const { players, gameBoard } = action.data;\n            return {\n                ...state,\n                gameStarted: Object.keys(players).length === 2,\n                room: {\n                    ...state.room,\n                    players\n                },\n                gameBoard\n            }\n        }\n        case actionTypes.CLOSE_ROOM: {\n            return {\n                ...initialState,\n                roomClosed: true\n            }\n        }\n        case actionTypes.PLAYER_LEFT_ROOM: {\n            return {\n                ...state,\n                playerLeftRoom: true,\n                room: {\n                    ...action.room\n                },\n                gameBoard: {\n                    ...initialState.gameBoard\n                }\n            }\n        }\n        case actionTypes.TOGGLE_PLAYER_TURN: {\n            return {\n                ...state,\n                gameBoard: {\n                    ...state.gameBoard,\n                    ...action.gameBoard,\n                    yourTurn: !state.gameBoard.yourTurn\n                }\n            }\n        }\n        case actionTypes.GAME_IS_OVER: {\n            return {\n                ...state,\n                gameBoard: {\n                    ...state.gameBoard,\n                    gameIsOver: true,\n                    ...action.gameBoard\n                }\n            }\n        }\n        case actionTypes.WAIT_FOR_PLAYER: {\n            return {\n                ...state,\n                playerLeftRoom: false,\n                gameStarted: false\n            }\n        }\n        case actionTypes.RESTART_GAME: {\n            return {\n                ...state,\n                gameBoard: {\n                    ...gameBoards[state.room.gameId],\n                    yourTurn: state.gameBoard.yourTurn,\n                    playerStep: state.gameBoard.playerStep\n                }\n            }\n        }\n        case actionTypes.GAME_BOARD_UPDATED: {\n            return {\n                ...state,\n                gameBoard: {\n                    ...state.gameBoard,\n                    ...action.gameBoard\n                }\n            }\n        }\n        case actionTypes.CLEAN_GAME_BOARD: {\n            return initialState;\n        }\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","export const SERVER_URL = process.env.NODE_ENV === 'production' ? window.location.origin : 'http://localhost:5000';\n","import io from 'socket.io-client';\n\nimport { SERVER_URL } from '../constants/configs';\nimport store from '../storage/store';\nimport * as actions from '../storage/actions/actions';\n\nclass SocketClient {\n\n    createRoom(data) {\n        this.client.emit('createRoom', data);\n    }\n\n    joinRoom(data) {\n        this.client.emit('joinRoom', data);\n    }\n\n    connectUser(userId) {\n        this.client = io.connect(SERVER_URL);\n\n        this.client.emit('setUserId', { userId });\n\n        this.client.on('userConnected', data => {\n            store.dispatch(actions.setSiteStatistics(data));\n        })\n\n        this.client.on('userDisconnected', data => {\n            store.dispatch(actions.setSiteStatistics(data));\n        })\n\n        this.client.on('roomsUpdated', rooms => {\n            store.dispatch(actions.updateRooms(rooms));\n        });\n\n        this.client.on('closeRoom', () => {\n            store.dispatch(actions.closeRoom());\n        });\n\n        this.client.on('playerLeftRoom', room => {\n            store.dispatch(actions.playerLeftRoom(room));\n        });\n\n        this.client.on('player1Joined', data => {\n            store.dispatch(actions.player1Joined(data));\n        });\n\n        this.client.on('player2Joined', data => {\n            store.dispatch(actions.player2Joined(data));\n        });\n\n        this.client.on('togglePlayerTurn', gameBoard => {\n            store.dispatch(actions.togglePlayerTurn(gameBoard));\n        });\n\n        this.client.on('gameIsOver', data => {\n            store.dispatch(actions.gameIsOver(data.gameBoard));\n\n            if (data.totalPoints) {\n                store.dispatch(actions.setUserTotalPoints(data.totalPoints));\n            }\n        });\n\n        this.client.on('updateGameRating', data => {\n            const { gameId, rating } = data;\n            store.dispatch(actions.setGameRating(gameId, rating));\n        })\n\n        this.client.on('gameBoardUpdated', data => {\n            store.dispatch(actions.gameBoardUpdated(data.gameBoard));\n        })\n    }\n\n    leaveRoom(name) {\n        this.client.emit('leaveRoom', { name });\n    }\n\n    playerMadeMove(data) {\n        this.client.emit('playerMadeMove', data);\n    }\n\n    updateGameBoard(data) {\n        this.client.emit('updateGameBoard', data);\n    }\n\n    disconnectUser() {\n        if (this.client) {\n            this.client.disconnect();\n        }\n    }\n}\n\nexport default new SocketClient();","export const TOKEN_KEY = 'token';\nexport const EXPIRATION_DATE_KEY = 'expirationDate';\n","import axios from 'axios';\n\nimport * as keys from '../constants/localStorageKeys';\nimport { SERVER_URL } from '../constants/configs';\n\nconst instance = axios.create({\n    baseURL: `${SERVER_URL}/api`,\n    headers: {\n        common: {\n            'Access-Control-Allow-Origin': SERVER_URL,\n            'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n        },\n        post: {\n            'Content-Type': 'application/json'\n        }\n    }\n});\n\ninstance.interceptors.request.use((req) => {\n    const token = localStorage.getItem(keys.TOKEN_KEY);\n \n    if (token) {\n        req.headers['x-auth'] = token;\n    }\n    return req;\n});\n\nexport default instance;","import axios from '../axios';\n\nexport const getUser = () => {\n    return axios.get('/user');\n}\n\nexport const login = data => {\n    return axios.post('/user/login', data);\n}\n\nexport const signUp = data => {\n    return axios.post('/user/signup', data);\n}\n\nexport const logout = () => {\n    return axios.post('/user/logout');\n}\n\nexport const resetPassword = data => {\n    return axios.post('/user/resetpassword', data);\n}","import { put, delay } from 'redux-saga/effects'\n\nimport client from '../../socket.io/client';\nimport * as actions from '../actions/actions';\nimport * as userRouters from '../../axios/routes/user';\nimport * as keys from '../../constants/localStorageKeys';\n\nexport function* logout(action) {\n  yield userRouters.logout();\n  yield removeLocalStorage();\n  yield put(actions.logoutSuccess());\n  yield client.disconnectUser();\n}\n\nexport function* checkAuthentication(action) {\n  const token = yield localStorage.getItem(keys.TOKEN_KEY);\n\n  if (token) {\n    const expirationDate = new Date(localStorage.getItem(keys.EXPIRATION_DATE_KEY));\n\n    if (expirationDate <= new Date()) {\n      yield put(actions.logout());\n    } else {\n      const response = yield userRouters.getUser();\n\n      if (response.status === 200 && response.data) {\n        yield put(actions.loginSuccess(response.data));\n\n        const expiresIn = yield (expirationDate.getTime() - new Date().getTime());\n        yield put(actions.setAuthTimeout(expiresIn));\n\n        yield client.connectUser(response.data.id);\n      }\n    }\n  }\n}\n\nexport function* login(action) {\n  yield put(actions.loginStart());\n  const response = yield userRouters.login(action.credentials);\n\n  if (response.data.error || response.status !== 200) {\n    yield put(actions.loginFailed(response.data.error));\n  } else {\n    yield put(actions.loginSuccess(response.data.user));\n    yield setLocalStorage(response.data.tokenDetails);\n    yield client.connectUser(response.data.user.id);\n  }\n}\n\nexport function* signUp(action) {\n  yield put(actions.signUpStart());\n  const response = yield userRouters.signUp(action.user);\n\n  if (response.data.error || response.status !== 200) {\n    yield put(actions.signUpFailed(response.data.error));\n  } else {\n    yield put(actions.signUpSuccess(response.data.user));\n    yield setLocalStorage(response.data.tokenDetails);\n    yield client.connectUser(response.data.user.id);\n  }\n}\n\nexport function* resetPassword(action) {\n  yield put(actions.resetPasswordStart());\n  const response = yield userRouters.resetPassword(action.data);\n\n  if (response.data.error || response.status !== 200) {\n    yield put(actions.resetPasswordFailed(response.data.error));\n  } else {\n    yield put(actions.resetPasswordSuccess(response.data.user));\n    yield setLocalStorage(response.data.tokenDetails);\n    yield client.connectUser(response.data.user.id);\n  }\n}\n\nexport function* setAuthTimeout(action) {\n  yield delay(action.expirationTime);\n  yield put(actions.logout());\n}\n\nfunction setLocalStorage(tokenDetails) {\n  const { expirationDate } = tokenDetails;\n  const expiresIn = getExpirationTime(expirationDate);\n  localStorage.setItem(keys.TOKEN_KEY, tokenDetails.token);\n  localStorage.setItem(keys.EXPIRATION_DATE_KEY, tokenDetails.expirationDate);\n  put(actions.setAuthTimeout(expiresIn));\n}\n\nfunction removeLocalStorage() {\n  localStorage.removeItem(keys.TOKEN_KEY);\n  localStorage.removeItem(keys.EXPIRATION_DATE_KEY);\n}\n\nfunction getExpirationTime(date) {\n  const expirationDate = new Date(date);\n  return expirationDate.getTime() - new Date().getTime();\n}","import client from '../../socket.io/client';\n\nexport function* joinRoom(action) {\n    yield client.joinRoom(action.data);\n}\n\nexport function* createRoom(action) {\n    yield client.createRoom(action.data);\n}\n\nexport function* leaveRoom(action) {\n    yield client.leaveRoom(action.room);\n}\n\nexport function* playerMadeMove(action) {\n    yield client.playerMadeMove(action.data);\n}\n\nexport function* updateGameBoard(action) {\n    yield client.updateGameBoard(action.data);\n}","import axios from '../axios';\n\nexport const getGameRating = data => {\n    return axios.get('/game/rating', {\n        params: data\n    });\n}","import { put } from 'redux-saga/effects'\n\nimport * as gameRouters from '../../axios/routes/game';\nimport * as actions from '../actions/actions';\n\nexport function* getGameRating(action) {\n    const { gameId } = action;\n    const response = yield gameRouters.getGameRating({ gameId });\n\n    if (response.data) {\n        yield put(actions.setGameRating(gameId, response.data));\n    }\n}","import { all, takeEvery } from 'redux-saga/effects';\n\nimport * as actionTypes from '../actions/actionTypes';\nimport * as authSagas from './auth';\nimport * as gameSagas from './game';\nimport * as statistics from './statistics';\n\nexport function* watchAuth() {\n    yield all([\n        takeEvery(actionTypes.CHECK_AUTHENTICATION, authSagas.checkAuthentication),\n        takeEvery(actionTypes.AUTH_SET_TIMEOUT, authSagas.setAuthTimeout),\n        takeEvery(actionTypes.INIT_LOGIN, authSagas.login),\n        takeEvery(actionTypes.INIT_SIGNUP, authSagas.signUp),\n        takeEvery(actionTypes.INIT_LOGOUT, authSagas.logout),\n        takeEvery(actionTypes.INIT_RESET_PASSWORD, authSagas.resetPassword)\n    ])\n}\n\nexport function* watchGame() {\n    yield all([\n        takeEvery(actionTypes.JOIN_ROOM, gameSagas.joinRoom),\n        takeEvery(actionTypes.CREATE_ROOM, gameSagas.createRoom),\n        takeEvery(actionTypes.LEAVE_ROOM, gameSagas.leaveRoom),\n        takeEvery(actionTypes.PLAYER_MADE_MOVE, gameSagas.playerMadeMove),\n        takeEvery(actionTypes.UPDATE_GAME_BOARD, gameSagas.updateGameBoard),\n    ])\n}\n\nexport function* watchStatistics() {\n    yield all([\n        takeEvery(actionTypes.GET_GAME_RATING, statistics.getGameRating),\n    ])\n};","\n\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga'\n\nimport authReducer from './reducers/auth';\nimport statisticsReducer from './reducers/statistics';\nimport gameReducer from './reducers/game';\n\nimport { watchAuth, watchGame, watchStatistics } from './sagas/sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n    combineReducers({\n        auth: authReducer,\n        statistics: statisticsReducer,\n        game: gameReducer\n    }),\n    applyMiddleware(sagaMiddleware)\n);\n\nsagaMiddleware.run(watchAuth);\nsagaMiddleware.run(watchGame);\nsagaMiddleware.run(watchStatistics);\n\nexport default store;","import React, { memo } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport store from '../../../../storage/store';\nimport * as actions from '../../../../storage/actions/actions';\n\nconst navigationItem = (props) => {\n    let navItem = null;\n\n    switch (props.type) {\n        case 'link': {\n            navItem = getLink(props);\n            break;\n        }\n        case 'dropdown': {\n            navItem = getDrowdown(props);\n            break\n        }\n        default:\n            navItem = getText(props);\n            break;\n    }\n    return navItem;\n}\n\nconst leaveRoom = () => {\n    const room = store.getState().game.room;\n    if (room.name) {\n        store.dispatch(actions.cleanGameBoard());\n        store.dispatch(actions.leaveRoom(room.name));\n    }\n}\n\nfunction getLink(props) {\n    return (\n        <li className=\"nav-item\" onClick={() => leaveRoom()} >\n            <NavLink to={props.link} className=\"nav-link\" exact={props.exact}>\n                {props.label}\n            </NavLink>\n        </li>\n    )\n}\n\nfunction getText(props) {\n    return (\n        <li className=\"nav-item\">\n            <span className=\"nav-link no-cursor\">{props.label}</span>\n        </li>\n    )\n}\n\nfunction getDrowdown(props) {\n    let dropdownItems;\n\n    if (props.dropdownItems) {\n        dropdownItems = props.dropdownItems.map(item => {\n            let dropDownItem = (\n                <span key={item.key} className=\"dropdown-item\" >\n                    {item.label}\n                </span>\n            );\n\n            if (item.link) {\n                dropDownItem = (\n                    <NavLink key={item.key} to={item.link ? item.link : '/'} className=\"dropdown-item\" exact={item.exact}>\n                        {item.label}\n                    </NavLink>\n                )\n            }\n            return dropDownItem;\n        });\n    }\n\n    return (\n        <li className=\"nav-item dropdown\">\n            <a className=\"nav-link dropdown-toggle\" href='/' data-toggle=\"dropdown\" id=\"download\">\n                {props.label}\n                <span className=\"caret\"></span>\n            </a>\n            <div className=\"dropdown-menu\" aria-labelledby=\"download\" onClick={() => leaveRoom()}>\n                {dropdownItems}\n            </div>\n        </li>\n    )\n}\n\nexport default memo(navigationItem);","import React, { memo } from 'react';\n\nimport Aux from '../../../hoc/Aux/Aux';\nimport NavigationItem from './NavigationItem/NavigationItem';\nimport games from '../../../constants/games';\n\nconst navigationItems = (props) => {\n    const gamesDropdownItems = Object.keys(games).map(key => {\n        const game = games[key];\n        const { label, url} = game;\n        return {\n            type: 'link',\n            link : url,\n            key,\n            label\n        }\n    })\n\n    let navItemsRight = (\n        <Aux>\n            <NavigationItem type=\"link\" link='/login' label=\"Login\" />\n            <NavigationItem type=\"link\" link='/signup' label=\"Sign up\" />\n        </Aux>\n    )\n\n    let navItemsLeft = (\n        <Aux>\n            <NavigationItem type=\"link\" link='/' label=\"Home\" />\n            <NavigationItem type=\"dropdown\" dropdownItems={gamesDropdownItems} label=\"Games\" />\n        </Aux>\n    )\n\n    if (props.isAuthenticated) {\n\n        const usersItems = [\n            {\n                key: 'points',\n                label: `${props.user.totalPoints} points`\n            },\n            {\n                key: 'logout',\n                label: 'Logout',\n                link: '/logout'\n            },\n        ];\n\n\n        navItemsRight = (\n            <Aux>\n                <NavigationItem type=\"link\" link='/rooms' label={`${props.rooms} rooms `} />\n                <NavigationItem type=\"text\" label={`${props.usersOnline} users online`} />\n                <NavigationItem type=\"dropdown\" dropdownItems={usersItems} label={props.user.username} />\n            </Aux>\n        )\n    }\n    return (\n        <Aux>\n            <ul className=\"nav navbar-nav navbar-nav\">\n                {navItemsLeft}\n            </ul>\n            <ul className=\"nav navbar-nav navbar-nav ml-auto\">\n                {navItemsRight}\n            </ul>\n        </Aux>\n    );\n}\nexport default memo(navigationItems);","import React, { memo } from 'react';\nimport NavigationItems from './NavigationItems/NavigationItems';\n\nconst navigationBar = (props) => (\n  <div className=\"navbar navbar-expand-lg fixed-top navbar-dark bg-primary\">\n    <div className=\"container\">\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n        <NavigationItems {...props} />\n      </div>\n    </div>\n  </div>\n)\n\nexport default memo(navigationBar);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\n\nimport classes from './Layout.css';\nimport NavigationBar from '../../components/NavigationBar/NavigationBar';\nimport axios from '../../axios/axios';\nimport * as actions from '../../storage/actions/actions';\n\nclass Layout extends Component {\n\n    componentWillMount() {\n        this.setInterceptor();\n    }\n\n    setInterceptor = () => {\n        axios.interceptors.response.use(res => res, error => {\n            if (error.response.status === 401) {\n                this.props.logout();\n            }\n            return Promise.resolve(error.response);\n        });\n    }\n\n    componentWillUnmount() {\n        axios.interceptors.response.eject(this.setInterceptor);\n    }\n\n    shouldComponentUpdate(nextProps, state) {\n        return this.props.isAuthenticated !== nextProps.isAuthenticated ||\n            this.props.usersOnline !== nextProps.usersOnline ||\n            this.props.rooms !== nextProps.rooms ||\n            (this.props.user && this.props.user.totalPoints !== nextProps.user.totalPoints);\n    }\n\n    render() {\n        return (\n            <div className={classes.appContainer}>\n                <div className={classes.header}>\n                    <NavigationBar {...this.props} />\n                </div>\n                <div className={classes.body}>\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.auth.user,\n        isAuthenticated: state.auth.isAuthenticated,\n        usersOnline: state.statistics.usersOnline,\n        rooms: state.statistics.rooms.length\n    }\n}\n\nconst mapDispatchToState = (dispatch) => {\n    return {\n        logout: () => dispatch(actions.logout())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToState)(withRouter(Layout));","import React, { memo } from 'react';\n\nconst gameRating = (props) => {\n    const rating = props.rating.map(ratingItem => (\n        <tr key={ratingItem.username}>\n            <td>{ratingItem.username}</td>\n            <td>{ratingItem.points}</td>\n        </tr>\n    ));\n\n    return (\n        <div>\n            <h4>Game rating : </h4> <br />\n            <div className=\"table-responsive\" style={{ maxHeight: \"350px\", overflow: \"scroll\" }}>\n                <table className=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">Username</th>\n                            <th scope=\"col\">Total points</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {rating}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\n\nexport default memo(gameRating);","import React, { memo } from 'react';\n\nimport classes from './Modal.css';\n\nconst modal = props => {\n    let closeIcon = (\n        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    );\n\n    if (!props.showCloseIcon) {\n        closeIcon = null\n    }\n\n    return (\n        <div className={classes.modalCentered + ' modal fade'} id={props.id} tabIndex=\"-1\" role=\"dialog\" aria-labelledby='modalTitle' data-backdrop=\"static\" data-keyboard=\"false\" aria-hidden=\"true\" >\n            <div className=\"modal-dialog\" role=\"document\">\n                <div className=\"modal-content\">\n                    {\n                        props.title ?\n                            <div className=\"modal-header\">\n                                <h5 className=\"modal-title\" id='modalTitle'>{props.title}</h5>\n                                {closeIcon}\n                            </div>\n                            : null\n                    }\n                    <div className=\"modal-body\">\n                        {props.children[0]}\n                    </div>\n                    <div className='modal-footer'>\n                        {props.children[1]}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default memo(modal);","/* eslint-disable no-undef */\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux';\n\nimport Modal from '../../../UI/Modal/Modal';\nimport Input from '../../../UI/Input/Input';\nimport Button from '../../../UI/Button/Button';\nimport { validateInput } from '../../../helpers/validation';\nimport * as actions from '../../../storage/actions/actions';\n\nconst modalId = 'newRoomModal';\n\nclass NewRoom extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            roomControl: {\n                type: 'text',\n                label: 'Room Name',\n                value: '',\n                placeholder: 'Enter room name'\n            },\n            validation: {\n                required: true\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextState.roomControl.value !== this.state.roomControl.value ||\n            nextState.roomControl.isValid !== this.state.roomControl.isValid;\n    }\n\n    setControlValue = (event) => {\n        const value = event.target.value;\n        const validationResults = validateInput(value, this.state.validation);\n        const controlUpdated = {\n            ...this.state.roomControl,\n            ...validationResults,\n            value\n        }\n        this.setState({\n            roomControl: controlUpdated\n        });\n    }\n\n    createRoom = () => {\n        let room = this.state.roomControl.value;\n\n        if (this.isRoomExists(room)) {\n            this.setState({\n                roomControl: {\n                    ...this.state.roomControl,\n                    errorMessage: 'Room already exist',\n                    isValid: false\n                }\n            })\n        } else {\n            this.props.createRoom({\n                gameId: this.props.gameId,\n                name : room,\n                playerId: this.props.player.id\n            });\n            $(`#${modalId}`).modal('hide');\n        }\n    }\n\n    isRoomExists = (roomName) => {\n        const rooms = this.props.rooms.map(room => room.name);\n        return rooms.includes(roomName);\n    }\n\n    render() {\n        return (\n            <Modal title=\"New Room\" id={modalId} showCloseIcon>\n                <Input {...this.state.roomControl} onChange={this.setControlValue} />\n                <div id=\"footer\">\n                    <Button\n                        type=\"button\"\n                        className='btn btn-primary mr-4'\n                        disabled={!this.state.roomControl.value}\n                        onClick={this.createRoom}>\n                        Create room\n                    </Button>\n                    <Button\n                        id=\"closeBtn\"\n                        type=\"button\"\n                        className=\"btn btn-secondary\"\n                        data-dismiss=\"modal\">\n                        Close\n                    </Button>\n                </div>\n            </Modal>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        rooms: state.statistics.rooms,\n        player: state.auth.user\n    }\n}\n\nconst mapDispatchToState = (dispatch) => {\n    return {\n        createRoom: (data) => dispatch(actions.createRoom(data))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToState)(NewRoom);","import React, { memo } from 'react';\n\nimport classes from './BoardMove.css';\nimport Button from '../../../UI/Button/Button';\n\nconst boardMove = (props) => (\n    <td>\n        <Button\n            type=\"button\"\n            className={classes.boardMove}\n            {...props}\n            disabled={props.value}>\n            {props.value}\n        </Button>\n    </td>\n)\n\nexport default memo(boardMove);","export const waitForPlayerModalId = 'waitForPlayerModal';\nexport const playerLeftRoomModalId = 'playerLeftModal';\nexport const gameIsOverModalId = 'gameIsOverModalId';","import React, { memo } from 'react';\n\nimport Button from '../../../UI/Button/Button';\nimport Spinner from '../../../UI/Spinner/Spinner';\nimport Modal from '../../../UI/Modal/Modal';\nimport { waitForPlayerModalId } from '../../../constants/modalsIds';\n\nconst waitForPlayerModal = (props) => (\n    <Modal id={waitForPlayerModalId}>\n        <div id='body'>\n            <Spinner />\n            <h5 className='text-center'>Waiting for a player ....</h5>\n        </div>\n        <div id='footer'>\n            <Button\n                id=\"closeBtn\"\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={() => props.leaveRoom()}>\n                Leave room\n            </Button>\n        </div>\n    </Modal>\n)\n\nexport default memo(waitForPlayerModal);","import React, { memo } from 'react';\n\nimport Button from '../../../UI/Button/Button';\nimport Modal from '../../../UI/Modal/Modal';\nimport { playerLeftRoomModalId } from '../../../constants/modalsIds';\n\nconst playerLeftRoomModal = (props) => (\n    <Modal id={playerLeftRoomModalId}>\n        <div id='body'>\n            <h5 className='text-center'>Player has left the room. Game is over</h5>\n        </div>\n        <div id='footer'>\n            <Button\n                id=\"closeBtn\"\n                type=\"button\"\n                className=\"btn btn-primary mr-4\"\n                onClick={() => props.startWaitingForPlayer()}>\n                Wait for player\n            </Button>\n            <Button\n                id=\"closeBtn\"\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={() => props.leaveRoom()}>\n                Leave room\n            </Button>\n        </div>\n    </Modal>\n);\n\nexport default memo(playerLeftRoomModal);","import React, { memo } from 'react';\n\nimport Button from '../../../UI/Button/Button';\nimport Modal from '../../../UI/Modal/Modal';\nimport { gameIsOverModalId } from '../../../constants/modalsIds';\n\nconst gameIsOverModal = (props) => (\n    <Modal id={gameIsOverModalId}>\n        <div id='body'>\n            <h5 className='text-center'> {props.message}</h5>\n        </div>\n        <div id='footer'>\n            <Button\n                id=\"closeBtn\"\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={() => props.leaveRoom()}>\n                Leave room\n            </Button>\n        </div>\n    </Modal>\n);\n\nexport default memo(gameIsOverModal);","/* eslint-disable no-undef */\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport { connect } from 'react-redux';\n\nimport classes from './TickTackToe.css';\nimport Button from '../../../UI/Button/Button';\nimport BoardMove from '../../../components/TickTackToe/BoardMove/BoardMove';\nimport * as actions from '../../../storage/actions/actions';\nimport games, { tickTackToeKey } from '../../../constants/games';\n\nimport * as modals from '../../../constants/modalsIds';\nimport WaitForPlayerModal from '../../../components/Games/Notifications/WaitForPlayerModal';\nimport PlayerLeftRoomModal from '../../../components/Games/Notifications/PlayerLeftRoomModal';\nimport GameIsOverModal from '../../../components/Games/Notifications/GameIsOverModal';\n\nconst gameDetailsUrl = games[tickTackToeKey].url;\n\nclass TickTackToe extends Component {\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return this.props.isAuthenticated !== nextProps.isAuthenticated ||\n            this.props.gameStarted !== nextProps.gameStarted ||\n            this.props.roomClosed !== nextProps.roomClosed ||\n            this.props.playerLeftRoom !== nextProps.playerLeftRoom ||\n            this.props.gameBoard.gameIsOver !== nextProps.gameBoard.gameIsOver ||\n            this.props.gameBoard.moves !== nextProps.gameBoard.moves;\n    }\n\n    componentDidMount() {\n        if (!this.props.isAuthenticated) {\n            this.props.setLoginRedirectUrl(gameDetailsUrl);\n            this.props.history.push('/login');\n        } else {\n            if (!this.props.gameStarted) {\n                $(`#${modals.waitForPlayerModalId}`).modal('show');\n            }\n\n            window.addEventListener(\"beforeunload\", e => {\n                e = e || window.e;\n                e.cancelBubble = true;\n                e.returnValue = '<h1>You sure you want to leave the room?</h1>';\n\n                if (e.stopPropagation) {\n                    e.stopPropagation();\n                    e.preventDefault();\n                }\n            });\n        }\n    }\n\n    componentDidUpdate() {\n        if (!this.props.gameStarted) {\n            $(`#${modals.waitForPlayerModalId}`).modal('show');\n        }\n\n        if (this.props.playerLeftRoom) {\n            $(`#${modals.playerLeftRoomModalId}`).modal('show');\n        }\n\n        if (this.props.gameBoard.gameIsOver) {\n            $(`#${modals.playerLeftRoomModalId}`).modal('hide');\n            $(`#${modals.gameIsOverModalId}`).modal('show');\n        }\n    }\n\n    leaveRoom = () => {\n        $(`#${modals.waitForPlayerModalId}`).modal('hide');\n        $(`#${modals.playerLeftRoomModalId}`).modal('hide');\n        $(`#${modals.gameIsOverModalId}`).modal('hide');\n        this.props.leaveRoom(this.props.room.name);\n    }\n\n    closeRoom = () => {\n        $(`#${modals.playerLeftRoomModalId}`).modal('hide');\n        this.props.history.push(gameDetailsUrl);\n    }\n\n    startWaitingForPlayer = () => {\n        setTimeout(() => {\n            this.props.waitForPlayer();\n        }, 500);\n        $(`#${modals.playerLeftRoomModalId}`).modal('hide');\n    }\n\n    playerMadeMove = (event) => {\n        const key = event.target.id;\n        let moves = [...this.props.gameBoard.moves];\n        moves[key] = this.props.gameBoard.playerStep;\n        const data = {\n            room: this.props.room,\n            gameBoard: {\n                ...this.props.gameBoard,\n                moves\n            }\n        }\n        this.props.playerMadeMove(data);\n    }\n\n    getGameIsOverModal = () => {\n        let message = 'Game is over. Try again.';\n\n        if (this.props.gameBoard.youWon) {\n            message = `You win! You got an extra ${this.props.gameBoard.points} points`;\n        }\n\n        setTimeout(() => {\n            $(`#${modals.gameIsOverModalId}`).modal('hide');\n            this.props.restartGame();\n        }, 3000);\n\n        return <GameIsOverModal message={message} leaveRoom={this.leaveRoom} />;\n    };\n\n    getGameBoard = () => {\n        let boardRows = [];\n        let modal = this.props.gameBoard.gameIsOver ? this.getGameIsOverModal() : null;\n\n        for (let i = 0; i < 3; i++) {\n            // eslint-disable-next-line no-loop-func\n            const boardMoves = this.props.gameBoard.moves\n                .slice(i * 3, (i + 1) * 3)\n                .map((boardMove, index) => {\n                    const id = i * 3 + index;\n                    return <BoardMove id={id} key={`col-sm-${id}`} value={boardMove} onClick={this.playerMadeMove} />\n                });\n            boardRows.push((\n                <tr key={`row${i}`} >\n                    {boardMoves}\n                </tr>\n            ));\n        }\n\n        return (\n            <div className={classes.gameBoard}>\n                {modal}\n                <div className={'row ' + classes.gamePnl}>\n                    <div className={'col-2 ' + classes.border}></div>\n                    <div className='col-8'>\n                        <div className='row align-items-center justify-content-center' style={{ height: \"90%\" }}>\n                            <div className={this.props.gameBoard.yourTurn ? 'col-sm-10' : classes.noUserTurn + ' col-sm-10'}>\n                                <table className={classes.game}>\n                                    <tbody>\n                                        {boardRows}\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                        <div className='row align-items-center justify-content-center' style={{ height: \"10%\" }}>\n                            {this.props.gameBoard.yourTurn ? <h5>Your turn</h5> : null}\n                        </div>\n                    </div>\n                    <div className={'col-2 ' + classes.border}></div>\n                </div>\n                <div className={'row text-center align-items-center justify-content-center ' + classes.playersPnl}>\n                    <div className='col-md-3'>\n                        <h5>\n                            {this.props.room.players[0].username}\n                        </h5>\n                    </div>\n                    <div className='col-md-2 text-break'>\n                        <Button\n                            id=\"closeBtn\"\n                            type=\"button\"\n                            className=\"btn btn-secondary\"\n                            onClick={this.leaveRoom}>\n                            Leave Game\n                        </Button>\n                    </div>\n                    <div className='col-md-3'>\n                        <h5>\n                            {this.props.room.players[1].username}\n                        </h5>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        let game = null;\n\n        if (!this.props.isAuthenticated) {\n            game = <Redirect to='/login' />;\n        } else if (this.props.playerLeftRoom) {\n            game = <PlayerLeftRoomModal startWaitingForPlayer={this.startWaitingForPlayer} leaveRoom={this.leaveRoom} />\n            $(`#${modals.gameIsOverModalId}`).modal('hide');\n        } else if (!this.props.room.name || this.props.roomClosed || this.props.gameBoard === undefined) {\n            game = <Redirect to={gameDetailsUrl} />;\n        } else {\n            if (!this.props.gameStarted) {\n                game = <WaitForPlayerModal leaveRoom={this.leaveRoom} />;\n            } else {\n                $(`#${modals.waitForPlayerModalId}`).modal('hide');\n                game = this.getGameBoard();\n            }\n        }\n        return game;\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        ...state.game\n    }\n}\n\nconst mapDispatchToState = (dispatch) => {\n    return {\n        setLoginRedirectUrl: (url) => dispatch(actions.setLoginRedirectUrl(url)),\n        leaveRoom: (room) => dispatch(actions.leaveRoom(room)),\n        playerMadeMove: (data) => dispatch(actions.playerMadeMove(data)),\n        waitForPlayer: () => dispatch(actions.waitForPlayer()),\n        restartGame: () => dispatch(actions.restartGame())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToState)(TickTackToe);","import React, { memo } from 'react';\n\nimport * as classes from './FleetGrid.css';\n\nconst horizontalColumns = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J'];\n\nconst fleetGrid = (props) => {\n    const rows = [];\n\n    rows.push(<div key='columns' className={classes.row}>\n        <div className={classes.gridCellHeaderEmpty} key='empty-cell'></div>\n        {\n            horizontalColumns.map(column => {\n                const key = column + '-column-';\n                return <div className={classes.gridCellHeader} key={key}>{column}</div>\n            })\n        }\n    </div >);\n\n    for (let x = 0; x < 10; x++) {\n        const cells = props.gridColumns\n            .slice(x * 10, (x + 1) * 10)\n            .map(item => {\n                const shipClasses = [classes.cell, 'text-center'];\n\n                if (props.readOnlyMode) {\n                    shipClasses.push(classes.readOnly);\n\n                    if (item.shipDestroyed) {\n                        shipClasses.push(classes.destroyed);\n                    } else if (item.moved) {\n                        shipClasses.push(classes.moved);\n                    } else if (item.selected) {\n                        shipClasses.push(classes.selected);\n                    }\n                } else {\n                    if (item.outOfBoundary) {\n                        shipClasses.push(classes.outOfBoundary);\n                    } else if (item.shipDestroyed) {\n                        shipClasses.push(classes.destroyed);\n                    } else if (item.moved) {\n                        shipClasses.push(classes.moved);\n                    } else if (item.selected || item.hovered) {\n                        shipClasses.push(classes.selected);\n                    } else {\n                        shipClasses.push(classes.empty);\n                    }\n                }\n                return (<div className={shipClasses.join(' ')} id={item.id} key={item.id}>\n                    {item.inTarget ? <h3>X</h3> : null}\n                </div>)\n            });\n        rows.push((\n            <div key={'row-' + x} className={classes.row}>\n                <div className={classes.gridRowNumber} key={'fleetRowNumber-' + 1}>{x + 1}</div>\n                {cells}\n            </div>\n        ));\n    }\n\n    return (\n        <div className={classes.fleetGrid} onClick={props.onClick} onMouseOver={props.onMouseOver}>\n            {rows}\n        </div>\n    );\n}\n\nexport default memo(fleetGrid);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../../../../storage/actions/actions';\nimport FleetGrid from '../../../../components/Battleship/FleetGrid/FleetGrid';\n\nclass Fleet extends Component {\n\n    constructor(props) {\n        super(props);\n        const displayShips = Object.hasOwnProperty.call(this.props, 'readOnlyMode') ? this.props.readOnlyMode : false;\n        const shipColumns = this.props.fleet.ships.reduce((columns, ship) => {\n            columns.push(...ship.columns);\n            return columns;\n        }, []);\n\n        this.state = {\n            gridColumns: new Array(100).fill(null).map((value, index) => ({\n                id: `gridColumn-${index}`,\n                selected: displayShips && shipColumns.includes(index)\n            }))\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.fleet.moves !== this.props.fleet.moves ||\n            this.props.yourTurn !== nextProps.yourTurn;\n    }\n\n    madeMove = (event) => {\n        if (this.props.readOnlyMode || !this.props.yourTurn) {\n            return;\n        }\n\n        const id = event.target.id;\n        const index = +this.state.gridColumns.findIndex(column => column.id === id);\n        const moves = this.props.fleet.moves ? [...this.props.fleet.moves] : [];\n        moves.push(index);\n\n        const data = {\n            room: this.props.room,\n            gameBoard: {\n                fleets: this.props.gameBoard.fleets\n                    .map(fleet => fleet.playerId === this.props.fleet.playerId ? { ...fleet, moves } : fleet)\n            }\n        };\n        this.props.playerMadeMove(data);\n    }\n\n    render() {\n        const { ships } = this.props.fleet;\n        const moves = this.props.fleet.moves ? [...this.props.fleet.moves] : [];\n\n        const columnsToDestroy = ships.reduce((columns, ship) => {\n            if (ship.destroyed) {\n                columns.push(...ship.columns);\n            }\n            return columns;\n        }, []);\n        const targetColumns = ships.reduce((columns, ship) => {\n            columns.push(...ship.columns);\n            return columns;\n        }, []);\n        const gridColumns = this.state.gridColumns.map((column, index) => ({\n            ...column,\n            moved: moves && moves.includes(index),\n            inTarget: moves && moves.includes(index) && targetColumns.includes(index),\n            shipDestroyed: columnsToDestroy.includes(index)\n        }));\n\n        return (\n            <div className='row justify-content-center'>\n                <div className='col-sm-10'>\n                    <FleetGrid\n                        readOnlyMode={this.props.readOnlyMode || !this.props.yourTurn}\n                        gridColumns={gridColumns}\n                        onClick={this.madeMove} />\n                    <h4 className='text-center m-1'>{this.props.player.username}</h4>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        room: state.game.room,\n        yourTurn: state.game.gameBoard.yourTurn,\n        gameBoard: state.game.gameBoard\n    }\n}\n\nconst mapDispatchToState = (dispatch) => {\n    return {\n        playerMadeMove: (data) => dispatch(actions.playerMadeMove(data))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToState)(Fleet);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\n\nimport * as classes from './ShipsPlacement.css';\nimport * as actions from '../../../../../storage/actions/actions';\nimport FleetGrid from '../../../../../components/Battleship/FleetGrid/FleetGrid';\nimport Aux from '../../../../../hoc/Aux/Aux';\nimport Button from '../../../../../UI/Button/Button';\n\nconst ships = {\n    'carrier': {\n        label: 'Aircraft carrier',\n        size: 5,\n        count: 1\n    },\n    'battleship': {\n        label: 'Battleship',\n        size: 4,\n        count: 1\n    },\n    'cruiser': {\n        label: 'Cruiser',\n        size: 3,\n        count: 1\n    },\n    'destroyer': {\n        label: 'Destroyer',\n        size: 2,\n        count: 2\n    },\n    'submarine': {\n        label: 'Submarine',\n        size: 1,\n        count: 2\n    },\n}\n\nclass ShipsPlacement extends Component {\n\n    constructor(props) {\n        super(props);\n        const playerShips = {};\n        Object.keys(ships).forEach(shipId => {\n            const { size, count } = ships[shipId];\n            for (let i = count; i > 0; i--) {\n                playerShips[`${shipId}-${i}`] = {\n                    key: `${shipId}-${i}`,\n                    id: shipId,\n                    size\n                };\n            }\n        });\n\n        this.state = {\n            gridColumns: new Array(100).fill(null).map((value, index) => ({\n                id: `gridColumn-${index}`,\n                selected: false,\n                hovered: false\n            })),\n            ships: playerShips,\n            placedShips: [],\n            selectedShip: null,\n            selectedShipColumns: [],\n            horizontalShip: true\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return this.state.selectedShip !== nextState.selectedShip ||\n            this.state.gridColumns !== nextState.gridColumns ||\n            this.state.horizontalShip !== nextState.horizontalShip;\n    }\n\n    selectShip = (id) => {\n        const ships = { ...this.state.ships };\n        const selectedShip = { ...ships[id] };\n        Object.keys(ships).forEach(key => ships[key].selected = id === key);\n        this.setState({\n            selectedShip,\n            ships\n        });\n    }\n\n    placeShip = () => {\n        if (this.state.shipOutOfBoundary || !this.state.selectedShip) {\n            return;\n        }\n\n        const placedShips = [...this.state.placedShips];\n        const ships = { ...this.state.ships };\n        delete ships[this.state.selectedShip.key];\n\n        const gridColumns = this.state.gridColumns\n            .map((item, index) => {\n                if (this.state.selectedShipColumns.includes(index)) {\n                    item.selected = true;\n                }\n                return item;\n            });\n        placedShips.push({\n            id: this.state.selectedShip.id,\n            columns: [...this.state.selectedShipColumns]\n        });\n\n        if (Object.keys(ships).length === 0) {\n            this.updateGameBoard(placedShips);\n        } else {\n            this.setState({\n                ships,\n                selectedShip: null,\n                selectedShipColumns: [],\n                gridColumns,\n                placedShips\n            });\n        }\n    }\n\n    updateGameBoard = (placedShips) => {\n        this.props.updateGameBoard({\n            room: this.props.room.name,\n            gameBoard: {\n                fleets: [\n                    ...this.props.fleets,\n                    {\n                        playerId: this.props.user.id,\n                        shipsAreSet: true,\n                        ships: placedShips\n                    }\n                ]\n            }\n        });\n    }\n\n    gridColumnHovered = (event) => {\n        const id = event.target.id;\n\n        if (!this.state.selectedShip || id.indexOf('gridColumn-') === -1) {\n            return;\n        }\n        const { size } = this.state.selectedShip;\n        const index = +this.state.gridColumns.findIndex(column => column.id === id);\n        const currentRow = Math.floor(index / 10);\n\n        const selectedShipColumns = [...new Array(size)]\n            .map((item, i) => this.state.horizontalShip ? index + i : index + 10 * i)\n            .filter(item => this.state.horizontalShip ? Math.floor(item / 10) !== currentRow + 1 : item < 100);\n        const columnsFilled = this.state.gridColumns\n            .filter((column, i) => selectedShipColumns.includes(i))\n            .reduce((filled, column) => {\n                if (column.selected) {\n                    filled = true;\n                }\n                return filled;\n            }, false);\n        const shipOutOfBoundary = columnsFilled || selectedShipColumns.length !== size;\n\n        const gridColumns = this.state.gridColumns.map((gridColumn, i) => {\n            return {\n                ...gridColumn,\n                outOfBoundary: shipOutOfBoundary && selectedShipColumns.includes(i),\n                hovered: selectedShipColumns.includes(i)\n            }\n        })\n        this.setState({\n            shipOutOfBoundary,\n            gridColumns,\n            selectedShipColumns: selectedShipColumns\n        });\n    }\n\n    setOrientation = (horizontalShip) => {\n        this.setState({ horizontalShip })\n    }\n\n    leaveRoom = () => {\n        this.props.leaveRoom(this.props.room.name);\n    }\n\n    render() {\n        const ships = Object.values(this.state.ships).map(ship => {\n            const shipCells = [], shipClasses = [classes.ship];\n\n            for (let i = ship.size; i > 0; i--) {\n                shipCells.push(<div key={`ship-${ship.key}-${i}`} className={classes.shipCell}></div>)\n            }\n\n            if (ship.selected) {\n                shipClasses.push(classes.shipSelected);\n            }\n\n            return (\n                <div className='col-12 p-0' key={ship.key}>\n                    <div className={shipClasses.join(' ')} onClick={() => this.selectShip(ship.key)}>\n                        {shipCells}\n                    </div>\n                </div>\n            )\n        });\n\n        const shipsPanel = (\n            <Aux>\n                <div className={classes.orientation} >\n                    <span\n                        className={this.state.horizontalShip ? classes.orientationSelected : null}\n                        onClick={() => this.setOrientation(true)}>\n                        Horizontal\n                    </span>  &nbsp; &nbsp; &nbsp;\n                    <span\n                        className={!this.state.horizontalShip ? classes.orientationSelected : null}\n                        onClick={() => this.setOrientation(false)}>\n                        Vertical\n                    </span>\n                </div>\n                <div className='row' style={{ width: '200px' }}>\n                    {ships}\n                </div>\n            </Aux>\n        );\n\n        return (\n            <div className={'row justify-content-center ' + classes.row}>\n                <div className='col-lg-5 m-4'>\n                    <FleetGrid\n                        gridColumns={this.state.gridColumns}\n                        onClick={this.placeShip}\n                        shipSelected={this.state.selectedShip}\n                        onMouseOver={this.gridColumnHovered} />\n                </div>\n                <div className='col-lg-3 m-4'>\n                    <div className={classes.shipsPanel}>\n                        {shipsPanel}\n                    </div>\n                    <div className={classes.leaveRoom}>\n                        <Button\n                            id=\"closeBtn\"\n                            type=\"button\"\n                            className=\"btn btn-secondary\"\n                            onClick={this.leaveRoom}>\n                            Leave Game\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        room: state.game.room,\n        user: state.auth.user,\n        fleets: state.game.gameBoard.fleets\n    }\n}\n\nconst mapDispatchToState = (dispatch) => {\n    return {\n        updateGameBoard: (data) => dispatch(actions.updateGameBoard(data)),\n        leaveRoom: (room) => dispatch(actions.leaveRoom(room))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToState)(ShipsPlacement);","/* eslint-disable no-undef */\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport { connect } from 'react-redux';\n\nimport classes from './Battleship.css';\nimport * as actions from '../../../storage/actions/actions';\nimport games, { battleship } from '../../../constants/games';\nimport Fleet from './Fleet/Fleet';\nimport ShipsPlacement from './Fleet/ShipsPlacement/ShipsPlacement';\nimport Spinner from '../../../UI/Spinner/Spinner';\nimport Button from '../../../UI/Button/Button';\n\nimport * as modals from '../../../constants/modalsIds';\nimport WaitForPlayerModal from '../../../components/Games/Notifications/WaitForPlayerModal';\nimport PlayerLeftRoomModal from '../../../components/Games/Notifications/PlayerLeftRoomModal';\nimport GameIsOverModal from '../../../components/Games/Notifications/GameIsOverModal';\n\nconst gameDetailsUrl = games[battleship].url;\n\nclass Battleship extends Component {\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return this.props.isAuthenticated !== nextProps.isAuthenticated ||\n            this.props.gameStarted !== nextProps.gameStarted ||\n            this.props.roomClosed !== nextProps.roomClosed ||\n            this.props.playerLeftRoom !== nextProps.playerLeftRoom ||\n            this.props.gameBoard.gameIsOver !== nextProps.gameBoard.gameIsOver ||\n            this.props.gameBoard.fleets !== nextProps.gameBoard.fleets;\n    }\n\n    componentDidMount() {\n        if (!this.props.isAuthenticated) {\n            this.props.setLoginRedirectUrl(gameDetailsUrl);\n            this.props.history.push('/login');\n        } else {\n            if (!this.props.gameStarted) {\n                $(`#${modals.waitForPlayerModalId}`).modal('show');\n            }\n\n            window.addEventListener(\"beforeunload\", e => {\n                e = e || window.e;\n                e.cancelBubble = true;\n                e.returnValue = '<h1>You sure you want to leave the room?</h1>';\n\n                if (e.stopPropagation) {\n                    e.stopPropagation();\n                    e.preventDefault();\n                }\n            });\n        }\n    }\n\n    componentDidUpdate() {\n        if (!this.props.gameStarted) {\n            $(`#${modals.waitForPlayerModalId}`).modal('show');\n        }\n\n        if (this.props.playerLeftRoom) {\n            $(`#${modals.playerLeftRoomModalId}`).modal('show');\n        }\n\n        if (this.props.gameBoard.gameIsOver) {\n            $(`#${modals.playerLeftRoomModalId}`).modal('hide');\n            $(`#${modals.gameIsOverModalId}`).modal('show');\n        }\n    }\n\n    closeRoom = () => {\n        $(`#${modals.playerLeftRoomModalId}`).modal('hide');\n        this.props.history.push(gameDetailsUrl);\n    }\n\n    startWaitingForPlayer = () => {\n        setTimeout(() => {\n            this.props.waitForPlayer();\n        }, 500);\n        $(`#${modals.playerLeftRoomModalId}`).modal('hide');\n    }\n\n    getGameBoard = () => {\n        const { fleets } = this.props.gameBoard;\n        const userId = this.props.user.id;\n        const modal = this.props.gameBoard.gameIsOver ? this.getGameIsOverModal() : null;\n        const waitForPlayer = fleets.length === 1 && fleets[0].playerId === userId;\n        let content = (\n            <div className={classes.gamePnl}>\n                <h4 className='text-center m-4'>Your fleet</h4>\n                <ShipsPlacement />\n            </div>\n        );\n\n        if (waitForPlayer) {\n            content = (\n                <div className='col-md-8 m-3'>\n                    <Spinner />\n                    <h4 className='text-center'>Please wait while the enemy places ships</h4>\n                </div>\n            );\n        } else if (fleets.length === 2 && fleets.every(fleet => fleet.shipsAreSet)) {\n            content = (\n                <div className={'row justify-content-center align-items-center ' + classes.gamePnl}>\n                    <div className='col-lg-5 mt-5'>\n                        <Fleet\n                            fleet={fleets.find(fleet => fleet.playerId === userId)}\n                            player={this.props.room.players.find(player => player.id === userId)}\n                            readOnlyMode\n                        />\n                    </div>\n                    <div className='col-lg-5 mt-5'>\n                        <Fleet\n                            fleet={fleets.find(fleet => fleet.playerId !== userId)}\n                            player={this.props.room.players.find(player => player.id !== userId)}\n                        />\n                    </div>\n                    <div className='col-12 text-center' style={{ height: '30px' }}>\n                        {this.props.gameBoard.yourTurn ? <h5>Your turn</h5> : null}\n                    </div>\n                    <div className='col-12 text-center' style={{ height: '40px' }}>\n                        <Button\n                            id=\"closeBtn\"\n                            type=\"button\"\n                            className=\"btn btn-secondary\"\n                            onClick={this.leaveRoom}>\n                            Leave Game\n                                </Button>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div className={classes.gameBoard}>\n                {modal}\n                <div className={'row justify-content-center align-items-center ' + classes.gamePnl}>\n                    {content}\n                </div>\n                <div className={'row justify-content-center align-items-center ' + classes.playersPnl}></div>\n            </div>\n        )\n    }\n\n    getGameIsOverModal = () => {\n        let message = 'Game is over. Try again.';\n\n        if (this.props.gameBoard.youWon) {\n            message = `You win! You got an extra ${this.props.gameBoard.points} points`;\n        }\n\n        setTimeout(() => {\n            $(`#${modals.gameIsOverModalId}`).modal('hide');\n            this.props.restartGame();\n        }, 3000);\n\n        return <GameIsOverModal message={message} leaveRoom={this.leaveRoom} />;\n    };\n\n    leaveRoom = () => {\n        $(`#${modals.waitForPlayerModalId}`).modal('hide');\n        $(`#${modals.playerLeftRoomModalId}`).modal('hide');\n        $(`#${modals.gameIsOverModalId}`).modal('hide');\n        this.props.leaveRoom(this.props.room.name);\n    }\n\n    render() {\n        let game = null;\n\n        if (!this.props.isAuthenticated) {\n            game = <Redirect to='/login' />;\n        } else if (this.props.playerLeftRoom) {\n            game = <PlayerLeftRoomModal startWaitingForPlayer={this.startWaitingForPlayer} leaveRoom={this.leaveRoom} />\n            $(`#${modals.gameIsOverModalId}`).modal('hide');\n        } else if (!this.props.room.name || this.props.roomClosed || this.props.gameBoard === undefined) {\n            game = <Redirect to={gameDetailsUrl} />;\n        } else {\n            if (!this.props.gameStarted) {\n                game = <WaitForPlayerModal leaveRoom={this.leaveRoom} />;\n            } else {\n                $(`#${modals.waitForPlayerModalId}`).modal('hide');\n                game = this.getGameBoard();\n            }\n        }\n        return game;\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        user: state.auth.user,\n        ...state.game\n    }\n}\n\nconst mapDispatchToState = (dispatch) => {\n    return {\n        setLoginRedirectUrl: (url) => dispatch(actions.setLoginRedirectUrl(url)),\n        leaveRoom: (room) => dispatch(actions.leaveRoom(room)),\n        playerMadeMove: (data) => dispatch(actions.playerMadeMove(data)),\n        waitForPlayer: () => dispatch(actions.waitForPlayer()),\n        restartGame: () => dispatch(actions.restartGame()),\n        updateGameBoard: (data) => dispatch(actions.updateGameBoard(data))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToState)(Battleship);","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { Route, Switch, Redirect } from 'react-router';\n\nimport GameRating from '../../components/Games/GameRating/GameRating';\nimport Button from '../../UI/Button/Button';\nimport NewRoom from './NewRoom/NewRoom';\nimport games, { tickTackToeKey, battleship } from '../../constants/games';\nimport * as actions from '../../storage/actions/actions';\n\nimport TickTackToe from '../Game/TickTackToe/TickTackToe';\nimport Battleship from '../Game/Battleship/Battleship';\n\nclass Game extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            game: null,\n            gameId: null,\n            startGame: false,\n            gameRating: []\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return this.props.isAuthenticated !== nextProps.isAuthenticated ||\n            this.props.room !== nextProps.room ||\n            this.state.gameRating !== nextState.gameRating ||\n            this.props.location.pathname !== nextProps.location.pathname;\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (Object.keys(nextProps.gamesRating).includes(prevState.gameId)) {\n            return {\n                ...prevState.state,\n                gameRating: nextProps.gamesRating[prevState.gameId]\n            }\n        }\n        return prevState;\n    }\n\n    componentDidMount() {\n        if (!this.state.game && this.props.match.params.id) {\n            this.getGameRating();\n        }\n    }\n\n    componentDidUpdate() {\n        if (this.props.match.params.id !== this.state.gameId && this.props.match.params.id) {\n            this.getGameRating();\n        }\n    }\n\n    getGameRating = () => {\n        if ((!this.state.game || this.props.match.params.id !== this.state.gameId) && this.props.match.params.id) {\n            const gameId = this.props.match.params.id;\n            const game = games[gameId];\n            this.setState({\n                game,\n                gameId\n            });\n\n            this.props.getGameRating(gameId);\n        }\n    }\n\n    createRoom = () => {\n        if (!this.props.isAuthenticated) {\n            this.props.setLoginRedirectUrl(this.props.match.url);\n            this.props.history.push('/login');\n        }\n    }\n\n    joinRoom = () => {\n        this.props.history.push('/rooms');\n    }\n\n    render() {\n        let gameDetails = null;\n\n        if (this.props.room) {\n            gameDetails = <Redirect to={`${this.props.match.url}/${this.props.room}`} />;\n        } else if (this.state.game) {\n            const rules = this.state.game.rules.map((rule, index) => <li key={index}>{rule}</li>);\n\n            gameDetails = (\n                <div className=\"container body-container\">\n                    <NewRoom gameId={this.state.gameId} />\n                    <div className='row justify-content-center'>\n                        <div className='col-sm-4 col-margin-fixed'>\n                            <GameRating rating={this.state.gameRating} />\n                        </div>\n                        <div className='col-sm-5 col-margin-fixed'>\n                            <h1>{this.state.game.name}</h1>\n                            <h3>How To Play</h3>\n                            <ol>\n                                {rules}\n                            </ol>\n                            <div>\n                                <Button\n                                    type=\"submit\"\n                                    className='btn btn-primary mr-4 mb-4'\n                                    data-toggle=\"modal\"\n                                    data-target=\"#newRoomModal\"\n                                    onClick={this.createRoom} >\n                                    Create a new room\n                                </Button>\n                                <Button\n                                    type=\"button\"\n                                    className='btn btn-primary mb-4'\n                                    onClick={this.joinRoom}>\n                                    Join an existing room\n                            </Button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <Switch>\n                <Route path={`/game/${tickTackToeKey}/:room`} exact component={TickTackToe} />;\n                <Route path={`/game/${battleship}/:room`} exact component={Battleship} />;\n                <Route path={`${this.props.match.path}`} exact >\n                    {gameDetails}\n                </Route>\n            </Switch>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        room: state.game.room.name,\n        gamesRating: state.statistics.gamesRating\n    }\n}\n\nconst mapDispatchToState = (dispatch) => {\n    return {\n        setLoginRedirectUrl: (url) => dispatch(actions.setLoginRedirectUrl(url)),\n        getGameRating: (gameId) => dispatch(actions.getGameRating(gameId))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToState)(Game);","import React, { memo } from 'react';\n\nimport Button from '../../UI/Button/Button';\n\nconst room = (props) => {\n    const joinEnabled = props.players.length === 1 && !props.players.find(player => player.id === props.userId);\n\n    return (\n        <div key={props.name} className='col-md-3 col-margin-fixed'>\n            <div className=\"card border-primary mb-3\">\n                <div className=\"card-header\">\n                    <h5>{props.name}</h5>\n                </div>\n                <div className=\"card-body\">\n                    <h6>{props.gameId}</h6>\n                    <h6 className=\"card-title\">{props.players.map(player => player.username).join(',')}</h6>\n                    {\n                        joinEnabled ?\n                            <Button\n                                type='button'\n                                className=\"btn btn-primary\"\n                                onClick={() => props.join(props.name)}>\n                                Join\n                            </Button> :\n                        null\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default memo(room);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\n\nimport * as actions from '../../storage/actions/actions';\nimport Room from '../../components/Room/Room';\n\nclass Rooms extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            roomSelected: null\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return this.props.rooms !== nextProps.rooms ||\n            nextProps.rooms.length !== this.props.rooms.length ||\n            nextProps.gameStart !== this.props.gameStart\n    }\n\n    joinRoom = (name) => {\n        const room = this.props.rooms.find(room => room.name === name);\n        this.setState({ roomSelected: room });\n        this.props.joinRoom({\n            name,\n            playerId: this.props.user.id\n        });\n    }\n\n    render() {\n        let rooms = this.props.rooms.map(room => (\n            <Room key={room.name} {...room} join={this.joinRoom} userId={this.props.user.id} />\n        ));\n\n        if (this.props.rooms.length === 0) {\n            rooms = (\n                <div className=\"col-md-8 offset-md-2\">\n                    <h4 className='align-middle'>No open rooms</h4>\n                </div>\n            )\n        }\n\n        if (this.state.roomSelected) {\n            rooms = <Redirect to={`game/${this.state.roomSelected.gameId}/${this.state.roomSelected.name}`} />\n        }\n\n        return (\n            <div className='container body-container'>\n                <div className='row'>\n                    {rooms}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        rooms: state.statistics.rooms,\n        user: state.auth.user,\n        gameStart: state.game.gameStart\n    }\n}\n\nconst mapDispatchToState = (dispatch) => {\n    return {\n        joinRoom: (data) => dispatch(actions.joinRoom(data))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToState)(Rooms);","import React, { memo } from 'react';\n\nimport classes from './GameLogo.css';\n\nconst game = (props) => (\n    <div className={classes.imgContainer} onClick={props.onClick}>\n        <img className=\"img-fluid\" src={props.src} alt={props.name} />\n        <div className={classes.gameLabel} >\n            <h4>{props.name}</h4>\n        </div>\n    </div>\n)\n\nexport default memo(game);","import React, { memo } from 'react';\n\nimport GameLogo from './GameLogo/GameLogo';\n\nconst games = (props) => (\n    Object.keys(props.games).map(key => {\n        const game = props.games[key];\n        return (\n            <div key={key} className='col-sm-4 col-margin-fixed' >\n                <GameLogo name={game.name} src={game.src} onClick={() => props.gameSelected(game.url)} />\n            </div>\n        );\n    })\n)\n\nexport default memo(games);","import React, { PureComponent } from 'react';\nimport { Switch, Route } from 'react-router';\n\nimport Game from '../Game/Game';\nimport Rooms from '../Rooms/Rooms';\nimport Games from '../../components/Games/Games';\nimport games from '../../constants/games';\n\nclass Home extends PureComponent {\n\n    openGameDetails = url => {\n        this.props.history.push(url);\n    }\n\n    render() {\n        return (\n            <Switch>\n                <Route path='/rooms' component={Rooms} />\n                <Route path='/game/:id/' component={Game} />\n                <Route path='/' exact>\n                    <div className=\"body-container container\">\n                        <div className='row justify-content-around'>\n                            <Games games={games} gameSelected={this.openGameDetails} />\n                        </div>\n                    </div>\n                </Route>\n            </Switch>\n        )\n    }\n}\n\nexport default Home;","import React, { Component, Suspense } from 'react';\nimport { Route, Switch, Redirect, withRouter } from 'react-router';\nimport { connect } from 'react-redux';\n\nimport Spinner from './UI/Spinner/Spinner';\nimport Layout from './hoc/Layout/Layout';\nimport Home from './containers/Home/Home';\nimport * as actions from './storage/actions/actions';\n\nconst Login = React.lazy(() => import('./containers/Auth/Login/Login'));\nconst Logout = React.lazy(() => import('./containers/Auth/Logout/Logout'));\nconst SignUp = React.lazy(() => import('./containers/Auth/SignUp/SignUp'));\nconst ResetPassword =  React.lazy(() => import('./containers/Auth/ResetPassword/ResetPassword'));\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.checkAuthentication();\n  }\n\n  render() {\n    return (\n      <Layout>\n        <Suspense fallback={<Spinner />}>\n          <Switch>\n            <Route path='/login' exact render={() => <Login {...this.props} />} />\n            <Route path='/signup' exact render={() => <SignUp {...this.props} />} />\n            <Route path=\"/logout\" exact render={() => <Logout {...this.props} />} />\n            <Route path=\"/resetpassword\" exact render={() => <ResetPassword {...this.props} />} />\n            <Route path='/' component={Home} />\n            <Redirect to='/' />\n          </Switch>\n        </Suspense>\n      </Layout>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.isAuthenticated\n  }\n}\n\nconst mapDispatchToState = (dispatch) => {\n  return {\n    checkAuthentication: () => dispatch(actions.checkAuthentication())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToState)(withRouter(App));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from './storage/store';\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fleetGrid\":\"FleetGrid__fleetGrid_2TSH_\",\"row\":\"FleetGrid__row_2pvmW\",\"gridCellHeaderEmpty\":\"FleetGrid__gridCellHeaderEmpty_2kbgB\",\"gridCellHeader\":\"FleetGrid__gridCellHeader_3h_eD\",\"gridRowNumber\":\"FleetGrid__gridRowNumber_28ttY\",\"cell\":\"FleetGrid__cell_8uUOh\",\"empty\":\"FleetGrid__empty_3YJPg\",\"selected\":\"FleetGrid__selected_1ndt7\",\"destroyed\":\"FleetGrid__destroyed_1G67s\",\"moved\":\"FleetGrid__moved_13PFK\",\"readOnly\":\"FleetGrid__readOnly_3PdRF\",\"outOfBoundary\":\"FleetGrid__outOfBoundary_LzdVM\"};","export const CHECK_AUTHENTICATION = 'CHECK_AUTHENTICATION';\nexport const AUTH_SET_TIMEOUT = 'AUTH_SET_TIMEOUT';\n\nexport const INIT_LOGIN = 'INIT_LOGIN';\nexport const LOGIN_START = 'LOGIN_START';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILED = 'LOGIN_FAILED';\n\nexport const INIT_LOGOUT = 'INIT_LOGOUT';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\n\nexport const INIT_SIGNUP = 'INIT_SIGNUP';\nexport const SIGNUP_START = 'SIGNUP_START';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAILED = 'SIGNUP_FAILED';\n\nexport const INIT_RESET_PASSWORD = 'INIT_RESET_PASSWORD';\nexport const RESET_PASSWORD_START = 'RESET_PASSWORD_START';\nexport const RESET_PASSWORD_SUCCESS = 'RESET_PASSWORD_SUCCESS';\nexport const RESET_PASSWORD_FAILED = 'RESET_PASSWORD_FAILED';\n\nexport const SET_AUTH_REDIRECT_URL = 'SET_AUTH_REDIRECT_URL';\nexport const SET_USER_TOTAL_POINTS = 'SET_USER_TOTAL_POINTS';\n\nexport const SET_SITE_STATISTICS = 'SET_SITE_STATISTICS';\nexport const UPDATE_ROOMS = 'UPDATE_ROOMS';\n\nexport const JOIN_ROOM = 'JOIN_ROOM';\nexport const CREATE_ROOM = 'CREATE_ROOM';\nexport const PLAYER1_JOINED = 'PLAYER1_JOINED';\nexport const PLAYER2_JOINED = 'PLAYER2_JOINED';\nexport const LEAVE_ROOM = 'LEAVE_ROOM';\nexport const CLOSE_ROOM = 'CLOSE_ROOM';\nexport const WAIT_FOR_PLAYER = 'WAIT_FOR_PLAYER';\nexport const PLAYER_LEFT_ROOM = 'PLAYER_LEFT_ROOM';\nexport const PLAYER_MADE_MOVE = 'PLAYER_MADE_MODE';\nexport const TOGGLE_PLAYER_TURN = 'TOGGLE_PLAYER_TURN';\nexport const GAME_IS_OVER = 'GAME_IS_OVER';\nexport const RESTART_GAME = 'RESTART_GAME';\nexport const UPDATE_GAME_BOARD = 'UPDATE_GAME_BOARD';\nexport const GAME_BOARD_UPDATED = 'GAME_BOARD_UPDATED';\nexport const CLEAN_GAME_BOARD = 'CLEAN_GAME_BOARD';\nexport const SET_GAME_RATING = 'SET_GAME_RATING';\nexport const GET_GAME_RATING = 'GET_GAME_RATING';","// extracted by mini-css-extract-plugin\nmodule.exports = {\"shipCell\":\"ShipsPlacement__shipCell_DE8Ru\",\"ship\":\"ShipsPlacement__ship_39bc6\",\"shipSelected\":\"ShipsPlacement__shipSelected_wKlpJ\",\"orientation\":\"ShipsPlacement__orientation_10XRl\",\"orientationSelected\":\"ShipsPlacement__orientationSelected_33jXb\",\"shipsPanel\":\"ShipsPlacement__shipsPanel_2qAdg\",\"row\":\"ShipsPlacement__row_2KM9j\",\"leaveRoom\":\"ShipsPlacement__leaveRoom_dn3eI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameBoard\":\"TickTackToe__gameBoard_1BT7-\",\"gamePnl\":\"TickTackToe__gamePnl_2JkPd\",\"border\":\"TickTackToe__border_2r9Vh\",\"playersPnl\":\"TickTackToe__playersPnl_1LbIr\",\"game\":\"TickTackToe__game_3YvNo\",\"noUserTurn\":\"TickTackToe__noUserTurn_E7wBX\"};","import * as actionTypes from '../actions/actionTypes';\n\nexport const checkAuthentication = () => {\n    return {\n        type: actionTypes.CHECK_AUTHENTICATION\n    }\n}\n\nexport const login = credentials => {\n    return {\n        type: actionTypes.INIT_LOGIN,\n        credentials\n    }\n}\n\nexport const loginStart = () => {\n    return {\n        type: actionTypes.LOGIN_START\n    }\n}\n\nexport const loginSuccess = user => {\n    return {\n        type: actionTypes.LOGIN_SUCCESS,\n        user\n    }\n}\n\nexport const loginFailed = error => {\n    return {\n        type: actionTypes.LOGIN_FAILED,\n        error\n    }\n}\n\nexport const resetPassword = data => {\n    return {\n        type: actionTypes.INIT_RESET_PASSWORD,\n        data\n    }\n}\n\nexport const resetPasswordStart = () => {\n    return {\n        type: actionTypes.RESET_PASSWORD_START\n    }\n}\n\nexport const resetPasswordSuccess = user => {\n    return {\n        type: actionTypes.RESET_PASSWORD_SUCCESS,\n        user\n    }\n}\n\nexport const resetPasswordFailed = error => {\n    return {\n        type: actionTypes.RESET_PASSWORD_FAILED,\n        error\n    }\n}\n\nexport const logout = () => {\n    return {\n        type: actionTypes.INIT_LOGOUT\n    }\n}\n\nexport const logoutSuccess = () => {\n    return {\n        type: actionTypes.LOGOUT_SUCCESS\n    }\n}\n\nexport const signUp = user => {\n    return {\n        type: actionTypes.INIT_SIGNUP,\n        user\n    }\n}\n\nexport const signUpStart = () => {\n    return {\n        type: actionTypes.SIGNUP_START\n    }\n}\n\nexport const signUpSuccess = user => {\n    return {\n        type: actionTypes.SIGNUP_SUCCESS,\n        user\n    }\n}\n\nexport const signUpFailed = error => {\n    return {\n        type: actionTypes.SIGNUP_FAILED,\n        error\n    }\n}\n\nexport const setAuthTimeout = expirationTime => {\n    return {\n        type: actionTypes.AUTH_SET_TIMEOUT,\n        expirationTime\n    }\n}\n\nexport const setLoginRedirectUrl = redirectUrl => {\n    return {\n        type: actionTypes.SET_AUTH_REDIRECT_URL,\n        redirectUrl\n    }\n}\n\nexport const setUserTotalPoints = totalPoints => {\n    return {\n        type: actionTypes.SET_USER_TOTAL_POINTS,\n        totalPoints\n    }\n}","import * as actionTypes from './actionTypes';\n\nexport const updateRooms = rooms => {\n    return {\n        type: actionTypes.UPDATE_ROOMS,\n        rooms\n    }\n}\n\nexport const setSiteStatistics = data => {\n    return {\n        type: actionTypes.SET_SITE_STATISTICS,\n        data\n    }\n}\n\nexport const getGameRating = gameId => {\n    return {\n        type: actionTypes.GET_GAME_RATING,\n        gameId\n    }\n}\n\nexport const setGameRating = (gameId, rating) => {\n    return {\n        type: actionTypes.SET_GAME_RATING,\n        gameId,\n        rating\n    }\n}\n\n\n","import * as actionTypes from '../actions/actionTypes';\n\nexport const joinRoom = data => {\n    return {\n        type: actionTypes.JOIN_ROOM,\n        data\n    }\n}\n\nexport const createRoom = data => {\n    return {\n        type: actionTypes.CREATE_ROOM,\n        data\n    }\n}\n\nexport const leaveRoom = room => {\n    return {\n        type: actionTypes.LEAVE_ROOM,\n        room\n    }\n}\n\nexport const player2Joined = data => {\n    return {\n        type: actionTypes.PLAYER2_JOINED,\n        data\n    }\n}\n\nexport const player1Joined = data => {\n    return {\n        type: actionTypes.PLAYER1_JOINED,\n        data\n    }\n}\n\nexport const closeRoom = () => {\n    return {\n        type: actionTypes.CLOSE_ROOM\n    }\n}\n\nexport const playerLeftRoom = room => {\n    return {\n        type: actionTypes.PLAYER_LEFT_ROOM,\n        room\n    }\n}\n\nexport const playerMadeMove = data => {\n    return {\n        type: actionTypes.PLAYER_MADE_MOVE,\n        data\n    }\n}\n\nexport const togglePlayerTurn = gameBoard => {\n    return {\n        type: actionTypes.TOGGLE_PLAYER_TURN,\n        gameBoard\n    }\n}\n\nexport const gameIsOver = gameBoard => {\n    return {\n        type : actionTypes.GAME_IS_OVER,\n        gameBoard\n    }\n}\n\nexport const waitForPlayer = () => {\n    return {\n        type : actionTypes.WAIT_FOR_PLAYER\n    }\n}\n\nexport const restartGame = () => {\n    return {\n        type : actionTypes.RESTART_GAME\n    }\n}\n\nexport const updateGameBoard = data => {\n    return {\n        type : actionTypes.UPDATE_GAME_BOARD,\n        data\n    }\n}\n\nexport const gameBoardUpdated = gameBoard => {\n    return {\n        type : actionTypes.GAME_BOARD_UPDATED,\n        gameBoard\n    }\n}\n\nexport const cleanGameBoard = () => {\n    return {\n        type : actionTypes.CLEAN_GAME_BOARD\n    }\n}\n","export {\n    checkAuthentication,\n    setAuthTimeout,\n    login,\n    loginStart,\n    loginSuccess,\n    loginFailed,\n    signUp,\n    signUpStart,\n    signUpSuccess,\n    signUpFailed,\n    resetPassword,\n    resetPasswordStart,\n    resetPasswordSuccess,\n    resetPasswordFailed,\n    logout,\n    logoutSuccess,\n    setLoginRedirectUrl,\n    setUserTotalPoints\n} from './auth'\n\nexport {\n    updateRooms,\n    setSiteStatistics,\n    getGameRating,\n    setGameRating\n} from './statistics'\n\nexport {\n    createRoom,\n    joinRoom,\n    player1Joined,\n    player2Joined,\n    closeRoom,\n    leaveRoom,\n    playerLeftRoom,\n    togglePlayerTurn,\n    playerMadeMove,\n    gameIsOver,\n    waitForPlayer,\n    restartGame,\n    updateGameBoard,\n    gameBoardUpdated,\n    cleanGameBoard\n} from './game'\n","import React from 'react';\n\nimport classes from './Spinner.css';\n\nconst spinner = (props) =>(\n    <div className={classes.spinner}>Loading...</div>\n)\n\nexport default spinner;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameBoard\":\"Battleship__gameBoard_1Mk1I\",\"gamePnl\":\"Battleship__gamePnl_3qWAB\",\"playersPnl\":\"Battleship__playersPnl_371WK\",\"border\":\"Battleship__border_1F8wV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appContainer\":\"Layout__appContainer_1OR_B\",\"header\":\"Layout__header_z340O\",\"body\":\"Layout__body_GFUkF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgContainer\":\"GameLogo__imgContainer_1fRfs\",\"gameLabel\":\"GameLogo__gameLabel_3GvD0\"};","import React , {memo} from 'react';\n\nconst input = (props) => {\n    let input = (\n        <div className=\"form-group\">\n            <label htmlFor={props.id}>{props.label}</label>\n            <input\n                type={props.type}\n                defaultValue={props.value}\n                autoComplete='off'\n                className=\"form-control\"\n                id={props.id}\n                placeholder={props.placeholder}\n                onInput={props.onChange} />\n        </div>\n    );\n\n    if (Object.hasOwnProperty.call(props, 'isValid')) {\n        let inputClasses = ['form-control'];\n        inputClasses.push(props.isValid ? \"is-valid\" : \" is-invalid\");\n\n        let message = null;\n        if (!props.isValid) {\n            message = <div className=\"invalid-feedback\">{props.errorMessage}</div>;\n        }\n        input = (\n            <div className=\"form-group\">\n                <label htmlFor={props.id}>{props.label}</label>\n                <input\n                    autoComplete='off'\n                    defaultValue={props.value}\n                    type={props.type}\n                    className={inputClasses.join(' ')}\n                    id={props.id}\n                    placeholder={props.placeholder}\n                    onInput={props.onChange}/>\n                {message}\n            </div>\n        );\n    }\n    return input;\n}\n\nexport default memo(input);","// eslint-disable-next-line no-useless-escape\nconst EMAIL_PATTERN = /^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/i;\n\nexport const validateInput = (value, rules) => {\n    let isValid = true;\n\n    if (!rules) {\n        return true;\n    }\n\n    if (rules.required) {\n        isValid = value.trim() !== '' && isValid;\n        if (!isValid) {\n            return { errorMessage : 'Field is required', isValid }\n        }\n    }\n\n    if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid;\n        if (!isValid) {\n            return { errorMessage: `Field must contain at least ${rules.minLength} character`, isValid }\n        }\n    }\n\n    if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid;\n        if (!isValid) {\n            return { errorMessage: `Field must contain no more than ${rules.maxLength} characters`, isValid }\n        }\n    }\n\n    if (rules.isEmail) {\n        isValid = EMAIL_PATTERN.test(value) && isValid;\n        if (!isValid) {\n            return { errorMessage: 'Email is invalid', isValid }\n        }\n    }\n    return { isValid };\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner__spinner_3uGUd\",\"load4\":\"Spinner__load4_2nuFQ\"};","module.exports = __webpack_public_path__ + \"static/media/tick-tack-toe.0f8b3612.jpg\";","module.exports = __webpack_public_path__ + \"static/media/battleship.7743ba66.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalCentered\":\"Modal__modalCentered_2emS7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"boardMove\":\"BoardMove__boardMove_2hO5U\"};"],"sourceRoot":""}