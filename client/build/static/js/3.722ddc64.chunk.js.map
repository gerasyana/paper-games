{"version":3,"sources":["containers/Auth/Login/Login.js"],"names":["Login","props","_this","Object","_home_travis_build_gerasyana_paper_games_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_home_travis_build_gerasyana_paper_games_client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_home_travis_build_gerasyana_paper_games_client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","setControlValue","event","key","target","id","value","validationResults","validateInput","state","validation","control","_home_travis_build_gerasyana_paper_games_client_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","controls","_home_travis_build_gerasyana_paper_games_client_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","setState","loginButtonEnabled","isButtonEnabled","validControls","keys","filter","hasOwnProperty","isValid","length","login","credentials","username","password","goToResetPassword","history","push","type","label","placeholder","required","minLength","maxLength","nextProps","nextState","isAuthenticated","loading","error","_this2","formElements","map","input","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","_UI_Input_Input__WEBPACK_IMPORTED_MODULE_10__","assign","onChange","errorMessage","className","form","_UI_Button_Button__WEBPACK_IMPORTED_MODULE_11__","disabled","onClick","react_router__WEBPACK_IMPORTED_MODULE_8__","to","redirectUrl","_UI_Spinner_Spinner__WEBPACK_IMPORTED_MODULE_12__","Component","connect","auth","dispatch","actions","withRouter"],"mappings":"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","file":"static/js/3.722ddc64.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect, withRouter } from 'react-router';\nimport { connect } from 'react-redux'\n\nimport Input from '../../../UI/Input/Input';\nimport Button from '../../../UI/Button/Button';\nimport Spinner from '../../../UI/Spinner/Spinner';\nimport * as actions from '../../../storage/actions/actions'\nimport { validateInput } from '../../../helpers/validation';\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            controls: {\n                username: {\n                    type: 'text',\n                    label: 'Username',\n                    value: '',\n                    placeholder: 'Enter username'\n                },\n                password: {\n                    type: 'password',\n                    label: 'Password',\n                    value: '',\n                    placeholder: 'Enter password'\n                }\n            },\n            validation: {\n                username: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 15\n                },\n                password: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 20\n                }\n            },\n            loginButtonEnabled: false\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return this.props.isAuthenticated !== nextProps.isAuthenticated ||\n            this.props.loading !== nextProps.loading ||\n            this.props.error !== nextProps.error ||\n            this.state.controls !== nextState.controls;\n    }\n\n    setControlValue = (event) => {\n        const key = event.target.id;\n        const value = event.target.value;\n        const validationResults = validateInput(value, this.state.validation[key]);\n        const control = {\n            ...this.state.controls[key],\n            ...validationResults,\n            value\n        };\n        const controls = {\n            ...this.state.controls,\n            [key]: control\n        }\n        this.setState({\n            controls,\n            loginButtonEnabled: this.isButtonEnabled(controls)\n        });\n    }\n\n    isButtonEnabled = (controls) => {\n        const validControls = Object.keys(controls).filter(key => {\n            const control = controls[key];\n            return Object.hasOwnProperty.call(control, 'isValid') && control.isValid\n        });\n        return Object.keys(controls).length === validControls.length;\n    }\n\n    login = () => {\n        const credentials = {\n            username: this.state.controls.username.value,\n            password: this.state.controls.password.value\n        }\n        this.props.login(credentials);\n    }\n\n    goToResetPassword = () => {\n        this.props.history.push('/resetpassword');\n    }\n\n    render() {\n        const formElements = Object.keys(this.state.controls).map(key => {\n            const input = this.state.controls[key];\n            return <Input key={key} id={key} {...input} onChange={this.setControlValue} />;\n        });\n\n        let errorMessage = null;\n        if (this.props.error) {\n            errorMessage = (\n                <div className=\"alert alert-dismissible alert-secondary\">\n                    <strong>{this.props.error}</strong>\n                </div>\n            );\n        }\n\n        let form = (\n            <div className=\"container body-container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-sm-4 col-margin-fixed\">\n                        {errorMessage}\n                        {formElements}\n                        <div>\n                            <Button\n                                type=\"submit\"\n                                className='btn btn-primary mr-4 mb-4'\n                                disabled={!this.state.loginButtonEnabled}\n                                onClick={this.login} >\n                                Login\n                            </Button>\n                            <Button\n                                type=\"button\"\n                                className='btn btn-primary mb-4'\n                                onClick={this.goToResetPassword}>\n                                Reset password\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n\n        if (this.props.isAuthenticated) {\n            form = <Redirect to={this.props.redirectUrl} />\n        }\n\n        if (this.props.loading) {\n            form = <Spinner />\n        }\n        return form;\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        loading: state.auth.loading,\n        error: state.auth.error,\n        redirectUrl: state.auth.redirectUrl\n    }\n}\n\nconst mapDispatchToState = (dispatch) => {\n    return {\n        login: (credentials) => dispatch(actions.login(credentials))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToState)(withRouter(Login));"],"sourceRoot":""}