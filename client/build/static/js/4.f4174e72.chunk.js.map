{"version":3,"sources":["UI/Input/Input.js","UI/Button/Button.js","helpers/validation.js","containers/Auth/SignUp/SignUp.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","input","props","a","createElement","className","htmlFor","id","label","type","defaultValue","value","autoComplete","placeholder","onInput","onChange","Object","hasOwnProperty","call","inputClasses","push","isValid","message","join","button","children","d","__webpack_exports__","validateInput","EMAIL_PATTERN","rules","required","trim","minLength","length","concat","maxLength","isEmail","test","SignUp","_this","_Users_yanagerasimchuk_self_education_projects_paper_games_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_Users_yanagerasimchuk_self_education_projects_paper_games_client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_yanagerasimchuk_self_education_projects_paper_games_client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","setControlValue","event","key","target","validationResults","state","validation","control","_Users_yanagerasimchuk_self_education_projects_paper_games_client_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","controls","_Users_yanagerasimchuk_self_education_projects_paper_games_client_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","setState","buttonEnabled","isButtonEnabled","validControls","keys","filter","signUp","user","username","email","password","_this2","formElemets","forEach","react__WEBPACK_IMPORTED_MODULE_7___default","_UI_Input_Input__WEBPACK_IMPORTED_MODULE_10__","assign","errorMessage","error","class","form","_UI_Button_Button__WEBPACK_IMPORTED_MODULE_11__","onClick","disabled","isAuthenticated","react_router__WEBPACK_IMPORTED_MODULE_8__","to","loading","_UI_Spinner_Spinner__WEBPACK_IMPORTED_MODULE_12__","React","Component","connect","auth","dispatch","actions"],"mappings":"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","file":"static/js/4.f4174e72.chunk.js","sourcesContent":["import React from 'react';\n\nconst input = (props) => {\n    let input = (\n        <div className=\"form-group\">\n            <label htmlFor={props.id}>{props.label}</label>\n            <input\n                type={props.type}\n                defaultValue={props.value}\n                autoComplete='off'\n                className=\"form-control\"\n                id={props.id}\n                placeholder={props.placeholder}\n                onInput={props.onChange} />\n        </div>\n    );\n\n    if (Object.hasOwnProperty.call(props, 'isValid')) {\n        let inputClasses = ['form-control'];\n        inputClasses.push(props.isValid ? \"is-valid\" : \" is-invalid\");\n\n        let message = null;\n        if (!props.isValid) {\n            message = <div className=\"invalid-feedback\">{props.message}</div>;\n        }\n        input = (\n            <div className=\"form-group\">\n                <label htmlFor={props.id}>{props.label}</label>\n                <input\n                    autoComplete='off'\n                    defaultValue={props.value}\n                    type={props.type}\n                    className={inputClasses.join(' ')}\n                    id={props.id}\n                    placeholder={props.placeholder}\n                    onInput={props.onChange}/>\n                {message}\n            </div>\n        );\n    }\n    return input;\n}\n\nexport default input;","import React from 'react';\n\nconst button = (props) => {\n    return (\n        <button {...props}> \n            {props.children}\n        </button>\n    );\n}\n\nexport default button;","// eslint-disable-next-line no-useless-escape\nconst EMAIL_PATTERN = /^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/i;\n\nexport const validateInput = (value, rules) => {\n    let isValid = true;\n\n    if (!rules) {\n        return true;\n    }\n\n    if (rules.required) {\n        isValid = value.trim() !== '' && isValid;\n        if (!isValid) {\n            return { message : 'Field is required', isValid }\n        }\n    }\n\n    if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid;\n        if (!isValid) {\n            return { message: `Field must contain at least ${rules.minLength} character`, isValid }\n        }\n    }\n\n    if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid;\n        if (!isValid) {\n            return { message: `Field must contain no more than ${rules.maxLength} characters`, isValid }\n        }\n    }\n\n    if (rules.isEmail) {\n        isValid = EMAIL_PATTERN.test(value) && isValid;\n        if (!isValid) {\n            return { message: 'Email is invalid', isValid }\n        }\n    }\n    return { isValid };\n}","import React from 'react';\nimport { Redirect } from 'react-router';\nimport { connect } from 'react-redux';\n\nimport Input from '../../../UI/Input/Input';\nimport Button from '../../../UI/Button/Button';\nimport Spinner from '../../../UI/Spinner/Spinner';\nimport * as actions from '../../../storage/actions/actions'\nimport { validateInput } from '../../../helpers/validation';\n\nclass SignUp extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            controls: {\n                email: {\n                    id: 'email',\n                    type: 'email',\n                    label: 'Email',\n                    value: '',\n                    placeholder: 'Enter email'\n                },\n                username: {\n                    id: 'username',\n                    type: 'text',\n                    label: 'Username',\n                    value: '',\n                    placeholder: 'Enter username'\n                },\n                password: {\n                    id: 'password',\n                    type: 'password',\n                    label: 'Password',\n                    value: '',\n                    placeholder: 'Enter password'\n                }\n            },\n            validation: {\n                username: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 15\n                },\n                password: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 20\n                },\n                email: {\n                    required: true,\n                    isEmail: true\n                }\n            },\n            buttonEnabled: false\n        }\n    }\n\n    setControlValue = (event, key) => {\n        const value = event.target.value;\n        const validationResults = validateInput(value, this.state.validation[key]);\n        const control = {\n            ...this.state.controls[key],\n            ...validationResults,\n            value,\n        }\n        const controls = {\n            ...this.state.controls,\n            [key]: control\n        }\n        this.setState({\n            controls,\n            buttonEnabled: this.isButtonEnabled(controls)\n        });\n    }\n\n    isButtonEnabled = (controls) => {\n        const validControls = Object.keys(controls).filter(key => {\n            const control = controls[key];\n            return Object.hasOwnProperty.call(control, 'isValid') && control.isValid\n        });\n        return Object.keys(controls).length === validControls.length;\n    }\n\n    signUp = () => {\n        const user = {\n            username: this.state.controls.username.value,\n            email: this.state.controls.email.value,\n            password: this.state.controls.password.value,\n        }\n        this.props.signUp(user);\n    }\n\n    render() {\n        const formElemets = [];\n        Object.keys(this.state.controls).forEach(key => {\n            const input = this.state.controls[key];\n            formElemets.push(<Input\n                key={key}\n                {...input}\n                onChange={(event) => this.setControlValue(event, key)}\n            />)\n        });\n\n        let errorMessage = null;\n        if (this.props.error) {\n            errorMessage = (\n                <div class=\"alert alert-dismissible alert-secondary\">\n                    <strong>{this.props.error}</strong>\n              </div>\n            );\n        }\n\n        let form = (\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-5\">\n                        {errorMessage}\n                        {formElemets}\n                        <div>\n                            <Button\n                                type=\"submit\"\n                                className='btn btn-primary'\n                                onClick={this.signUp}\n                                disabled={!this.state.buttonEnabled}>\n                                Sign Up\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n\n        if (this.props.isAuthenticated) {\n            form = <Redirect to='/' />\n        }\n\n        if (this.props.loading) {\n            form = <Spinner />\n        }\n        return form;\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        loading: state.auth.loading,\n        error: state.auth.error\n    }\n}\n\nconst mapDispatchToState = (dispatch) => {\n    return {\n        signUp: (user) => dispatch(actions.signUp(user))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToState)(SignUp);"],"sourceRoot":""}